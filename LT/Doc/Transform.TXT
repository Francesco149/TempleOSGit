[C:/LT/OSMain/Adam1a.HPZ,3482] GrDC's have a 4x4 matrix for rotating,
scaling, skewing and shifting in 3 
dimensions.  To make the graphics routines respond to the transformation, you 
must set the [C:/LT/OSMain/Adam1a.HPZ,3445] DCF_TRANSFORMATION flag.

The matrix consists of integers that have been scaled 32 bits
([C:/LT/Adam/Gr/MathGr.APZ,142] gr_scale).  See 
[::/LT/Demo/Lectures/FixedPoint.CPZ] ::/LT/Demo/Lectures/FixedPoint.CPZ to
learn why.

See [C:/LT/Adam/Gr/MathGr.APZ,163] GrRotX(), [C:/LT/Adam/Gr/MathGr.APZ,179]
GrRotY(), [C:/LT/Adam/Gr/MathGr.APZ,195] GrRotZ(),
[C:/LT/Adam/Gr/MathGr.APZ,211] GrScaleMat(), [C:/LT/Adam/Gr/MathGr.APZ,240]
GrRotXEqu(), [C:/LT/Adam/Gr/MathGr.APZ,260] GrRotYEqu(), 
[C:/LT/Adam/Gr/MathGr.APZ,280] GrRotZEqu() and [C:/LT/Adam/Gr/MathGr.APZ,300]
GrScaleMatEqu() to rotate about axes and scale.  Combine them 
with [C:/LT/Adam/Gr/MathGr.APZ,220] GrMulMat() and assign them to the
[C:/LT/OSMain/Adam1a.HPZ,3482] GrDC.dc with [C:/LT/Adam/Gr/MathGr.APZ,308]
GrSetRotMat().  See 
[::/LT/Demo/Graphics/Box.CPZ] ::/LT/Demo/Graphics/Box.CPZ.

You can rotate single points using [C:/LT/Adam/Gr/MathGr.APZ,144] GrRot().

The 4th dimension allows a neat trick where you can place pos shifts 
(translations), into the matrix and [C:/LT/Adam/Gr/MathGr.APZ,220] GrMulMat
them to combine rotation/shift 
operations.  Normally, you can't combine pos shift operations.  See 
[C:/LT/Adam/Gr/MathGr.APZ,354] GrSetTranslation() and
[::/LT/Demo/Graphics/Transform.CPZ] ::/LT/Demo/Graphics/Transform.CPZ.

Finally, [C:/LT/OSMain/Adam1a.HPZ,3482] GrDC's have an x, y and z which is an
additional shift (translation).

The transformation is implemented as a callback on the
[C:/LT/OSMain/Adam1a.HPZ,3482] GrDC's transform() 
member.  The default transfrom() callback is [C:/LT/Adam/Gr/MathGr.APZ,154]
GrTransform().  See 
[::/LT/Demo/GameStarters/EagleDive.CPZ] ::/LT/Demo/GameStarters/EagleDive.CPZ
or [::/LT/Demo/GameStarters/FPS.CPZ] ::/LT/Demo/GameStarters/FPS.CPZ to 
see how to change the transfrom() callback for foreshortening.

