DOLLAR SIGN CMDS
   LoseThos supports rich-text type commands which are bracketed with "$".  
Use CTRL-L to experiment with them.  Use CTRL-T to toggle between plain text 
and rich text.
   The format of "$" commands includes a two character code, +/-flags, a
comma 
and parameters separated by commas.  The flags often determine how many and 
what parameters the command takes.
    See [::/LT/ADAM/LTF.CPZ,default_flags] default_flags.
 
+] TX Text
  Normally, text is not bracketed with "$", but if you wish to specify flag
  attributes to center text, you can bracket them with "$" and enter flags such
  as "+CX".  You cannot edit them if they are bracketed by "$" unless you
  toggle to plain text mode with CTRL-T.
+] CR Hard Carriage Return
  Carriage returns are normally specified without being bracketed with "$".
+] SR Soft Carriage Return
  Word wrap uses soft carriage returns which are not saved.  You never place
  soft carriage returns by yourself.
+] TB Tab
  Tabs are normally not bracketed with "$", but are stored as ASCII#9.
+] CU Cursor position
  The cursor position is usually stored as a ASCII#5 I1acter and is not
  bracketed with "$".  You do not normally enter cursor position commands
  yourself.
+] ID Indent +/- number
  This changes the indention deeper if positive or shallower if negative. It
  effects the behavior of trees.
+] DA Data
  This is primarily used for forms that prompt for data. Use CTRL-L as a
  resource editor-type thing to generate the text you'll need in your "fmtdata"
  command in a struct.  If you add it directly with LtfPutS, you'll need to
  fill-in the data address.  See [DoForm] DoForm().
+] Text Colors
  You place an expression(usually a color define--see
  [C:/LT/OSMain/Adam1a.HPZ,3388] color defines) to indicate which of the 16
  colors to use. If you enter no number, color returns to the default.
FG Foreground Color
BG Background Color
FD Default Foreground Color
BD Default Background Color
FL Foreground of Link Color
BL Background of Link Color
FM Foreground of Macro/Menu-Value Color
BM Background of Macro/Menu-Value Color
FA Foreground of Anchor Color
BA Background of Anchor Color
FH Foreground of Hidden widget Color
BH Background of Hidden widget Color
FE Foreground of Tree Color
BE Background of Tree Color
+] FU,BU User Prompts
  These are special color changing commands.  They are used when the user is
  prompted for text at the command line.  They reset the cursor position if the
  cursor is positioned before them on the line.  They are also used to indicate
  the start of a prompted string.
+] CL clear
  Clear all entries except ones with hold(+H) flags.  This is good for
  programs which update data to the command line.  It keeps the quantity of ltf
  entries down.
+] WW Word Wrap
  Include a 1 or 0.
+] UL Underline
  Include a 1 or 0.
+] IV Invert
  Include a 1 or 0.
+] BK Blink
  Include a 1 or 0.
+] SX Shift X position
  * Include a number from -16 to 15.
* Only foreground is shifted.
* Positive right.
* For negative be sure to preceed with a comma.
+] SY Shift Y position
  * Include a number from -16 to 15.
* Only foreground is shifted.
* Positive down.
* For negative be sure to preceed with a comma.
+] CM Cursor Movement
  
+] AN Anchor
  
+] LK Link
  By default, links have a separate display text from link text, but with the
  -A flag you can make the link displayed as in example 3.

Examples (Press CTRL-T to see):

1)[::/LT/DOC/Help.TXZ] File link to Help.TXZ
2)[::/LT/DOC/Help.TXZ] File link to Help.TXZ with link type file
3)File link without different display string.[::/LT/DOC/Help.TXZ]
4)[::/LT/DOC/Help.TXZ,Admin] File find link searching for 'Admin'
5)[::/LT/OSMain/ADAMK.HPZ,CTRL:3] File find link searching for 3rd 'CTRL'
6)[C:/LT/OSMain/Str1a.CPZ,1122] Manual page link
7)[::/LT/OSMain/ADAMK.HPZ,200] File line number link
8)[::/LT/OSMain/SYSTEXT.CPZ,OS_SYSTEXT] File anchor link--Press CTRL-T to see
  anchor after you click
+] BT Button
  
+] CB Check Box
  
+] MA Macro
  Macro's are usually placed into menu/help areas and they have the '+X' flag
  set by default.  Adding '-X' prevents the usual ESC from being sent (which
  exits the macro screen).  Note that when you output a macro to the cmd line,
  when the user clicks on it, it will go to the bottom and execute it unless
  you cancel the ESC with a '-X'.

+] MU Menu Value
  
+] HX Hex Edit
  
+] Hidden Text Widget
  HS Start of hidden text
HE End of hidden text
Hidden text widgets allow text to be placed in collapsable brackets like this
  <-This is hidden.> which can be expanded by clicking them. If you place a
  '-C' flag to uncollapse it, it will start expanded like this <-Click to
  hide>. They can be nestled like this <-Click here:<-This is nestled.> okay?>.
+] TR Tree Widget
  A tree widget is a branch in a collapsable tree.  The domain of the branch
  extends from the first +indent until enough -indents bring it back to where
  it started.  Tree's begin collapsed unless a -C flag is present.
+] PI Picture
  You can insert a picture into text with CTRL-R.  It is critical where the
  cursor is at the time you enter CTRL-R because the picture will be offset
  from that location.  This is especially important when adding images to
  programs.  Numbers for pictures are automatically chosen because copying to
  and from the clipboard requires this. You can insert another picture with the
  same image by hitting CTRL-T and manually adding a $PI$ entry with the same
  number.  You can cause the $PI$ command to appear with some text associated
  with it by manually adding text into the $PI$ command, as in $PI,"pic 2",2$.
+] IB Insert Binary
  This cmd is used to tell the compiler to fetch the binary data stored after
  the end of text.  There is basically one type of binary data in LTF's at this
  point--pictures-- created with CTRL-R. They have a number associated with
  them.  This number is automatically chosen, because copying to the clip-board
  and back requires renumbering. To use a $IB$ command, toggle to plain text
  (CTRL-T) after inserting a picture and check the number in the $PI$ command.
  Create a $IB$ command with the same number and the picture will be inserted
  into the compiled stream like a string constant.  You can optionally include
  text to be displayed for the $IB$ command.

The main reason for the $IB$ command at this point is to pass a parameter to
  the [GrElemsPlot] GrElemsPlot() function.  See
  [::/LT/DEMO/Graphics/Sprite1.CPZ] ::/LT/DEMO/Graphics/Sprite1.CPZ.

+] IT Insert Binary Type
  See $IB$.  This command inserts a number into the compiled stream
  describing the type of binary data associated with a number.  See
  [LTFBT_ELEMENT_GRAPH] LTFBT_ELEMENT_GRAPH for the types of binary data in
  LTF's.
+] IS Insert Binary Size
  See $IB$.  This command inserts a number into the compiled stream
  describing the size of binary data associated with a number.
+] BP Break Point
  This is used by the debugger to mark a break point.
+] ER Error
  When errors are detected in dollar commands, an ER entry is generated to
  hold the garbage so it is not lost.

+] FLAGS
  +] +H Hold
    Hold entry and do not delete it when cleared with CL or when the
    l->max_entries is exceeded.  Word wrap is a good one to hold.
  +] +A Auxilliary String
    Most commands display a string. Some need other strings.  A +A means an
    auxilliary string is present.  Links have +A by default, so use a -A if you
    wish the display string and the link string to be the same.
  +] +TR Tree(obsolete)
    * There is now a separate TR command so this flag is obsolete.
* Make a tree branch.  Usually this is placed on a text(TX) entry.  The tree
    extends from the start until another tree entry or when indentation has been
    expanded and reduced back to the starting value.
* A +C flag on a tree will start it collapsed.
  +] +PU PopUp
    A PopUp flag on a macro (MA) will cause the commands to run in a pop-up
    window.
  +] +C Collapsed
    A collapsed flag on a tree TR entry or a hide start HS will cause it to
    start collapsed.  A -C flag will make it start open.
  +] +X Exit
    * A exit flag will cause a macro to send an ESC before running(to exit
    the macro screen and return to the cmd prompt).  Actually, the default has an
    exit flag set so you might add a -X to turn-off ESC.
* If an entry is in the cmd prompt window, the +X will cause a movement to
    the bottom of the window.
  +] +Q Quit
    A quit flag is similar to a +X except a CTRL-Q instead of an ESC to exit.
  +] +PW Password
    A password flag on a data entry (DA) will cause text to be shown as '*'s.
  +] +Z Zero
    A zero flag on a hex edit(HX) entry will cause the offset from zero.  A
    -X will show the actual mem address. By default, HX has the zero flag set.
  +] +AL Alias
    An alias flag on a tree entry (+TR) will cause the text of the current
    entry the cursor is on to be copied to this entry.  This creates something
    similar to a drop-down window, but it doesn't work well yet.
  +] +RD Refresh Data
    The Refresh Data flag on a DA or a CB makes the value updated
    continuously.
  

EXAMPLES:

Press CTRL-T to see how the following were done.
_Underlined_ Inverted **Blinking** super sub
This is a big long scrolling message.

Cursor Movements:
Cursor moved 3 rows down and to 3rd column from left.
Note mandatory comma after flags

The following may be changed to modes instead of attributes with flags.

                               This is centered

                                                       This is right justified
