	ALIGN	8,0x90
REVERSE_BITS_TABLE::
	DU1	0x00,0x80,0x40,0xC0,0x20,0xA0,0x60,0xE0;
	DU1	0x10,0x90,0x50,0xD0,0x30,0xB0,0x70,0xF0;
	DU1	0x08,0x88,0x48,0xC8,0x28,0xA8,0x68,0xE8;
	DU1	0x18,0x98,0x58,0xD8,0x38,0xB8,0x78,0xF8;
	DU1	0x04,0x84,0x44,0xC4,0x24,0xA4,0x64,0xE4;
	DU1	0x14,0x94,0x54,0xD4,0x34,0xB4,0x74,0xF4;
	DU1	0x0C,0x8C,0x4C,0xCC,0x2C,0xAC,0x6C,0xEC;
	DU1	0x1C,0x9C,0x5C,0xDC,0x3C,0xBC,0x7C,0xFC;
	DU1	0x02,0x82,0x42,0xC2,0x22,0xA2,0x62,0xE2;
	DU1	0x12,0x92,0x52,0xD2,0x32,0xB2,0x72,0xF2;
	DU1	0x0A,0x8A,0x4A,0xCA,0x2A,0xAA,0x6A,0xEA;
	DU1	0x1A,0x9A,0x5A,0xDA,0x3A,0xBA,0x7A,0xFA;
	DU1	0x06,0x86,0x46,0xC6,0x26,0xA6,0x66,0xE6;
	DU1	0x16,0x96,0x56,0xD6,0x36,0xB6,0x76,0xF6;
	DU1	0x0E,0x8E,0x4E,0xCE,0x2E,0xAE,0x6E,0xEE;
	DU1	0x1E,0x9E,0x5E,0xDE,0x3E,0xBE,0x7E,0xFE;
	DU1	0x01,0x81,0x41,0xC1,0x21,0xA1,0x61,0xE1;
	DU1	0x11,0x91,0x51,0xD1,0x31,0xB1,0x71,0xF1;
	DU1	0x09,0x89,0x49,0xC9,0x29,0xA9,0x69,0xE9;
	DU1	0x19,0x99,0x59,0xD9,0x39,0xB9,0x79,0xF9;
	DU1	0x05,0x85,0x45,0xC5,0x25,0xA5,0x65,0xE5;
	DU1	0x15,0x95,0x55,0xD5,0x35,0xB5,0x75,0xF5;
	DU1	0x0D,0x8D,0x4D,0xCD,0x2D,0xAD,0x6D,0xED;
	DU1	0x1D,0x9D,0x5D,0xDD,0x3D,0xBD,0x7D,0xFD;
	DU1	0x03,0x83,0x43,0xC3,0x23,0xA3,0x63,0xE3;
	DU1	0x13,0x93,0x53,0xD3,0x33,0xB3,0x73,0xF3;
	DU1	0x0B,0x8B,0x4B,0xCB,0x2B,0xAB,0x6B,0xEB;
	DU1	0x1B,0x9B,0x5B,0xDB,0x3B,0xBB,0x7B,0xFB;
	DU1	0x07,0x87,0x47,0xC7,0x27,0xA7,0x67,0xE7;
	DU1	0x17,0x97,0x57,0xD7,0x37,0xB7,0x77,0xF7;
	DU1	0x0F,0x8F,0x4F,0xCF,0x2F,0xAF,0x6F,0xEF;
	DU1	0x1F,0x9F,0x5F,0xDF,0x3F,0xBF,0x7F,0xFF;

MSG_DRAW_TASK_BORDER:	DU1 "DrawTaskBorder",0;
MSG_UPDATE_ODES:	DU1 "UpdateOdes",0;
////**************************PROCEDURE*************************
	ALIGN	8,0x90
CP_PLOT_SCREEN_I1::
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EBX,SF_PARAM2[EBP]
	MOV	EAX,SF_PARAM3[EBP]
	OR	EBX,EBX
	JS	@@100
	OR	EAX,EAX
	JS	@@100
	CMP	EBX,U4 FS:[TSS_CRT_WIDTH]
	JGE	@@100
	CMP	EAX,U4 FS:[TSS_CRT_HEIGHT]
	JGE	@@100
	IMUL	U4 FS:[TSS_CRT_WIDTH]
	ADD	EAX,U4 [SYS_TEXTBASE]
	ADD	EBX,EAX
	MOV	EAX,U4 SF_PARAM1[EBP]
	MOV	U4 [EBX],EAX

	POP	EBP
	XOR	EDX,EDX
	MOV	EAX,1
	RET
@@100:	POP	EBP
	XOR	EDX,EDX
	XOR	EAX,EAX
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
CP_PLOT_WINDOW_I1::
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EBX,U4 SF_PARAM2[EBP]
	MOV	EAX,U4 SF_PARAM3[EBP]

	OR	EBX,EBX
	JS	@@100
	ADD	EBX,U4 FS:[TSS_WINDOW_LEFT]
	CMP	EBX,U4 FS:[TSS_WINDOW_RIGHT]
	JG	@@100
	OR	EBX,EBX
	JS	@@100
	CMP	EBX,U4 FS:[TSS_CRT_WIDTH]
	JGE	@@100

	OR	EAX,EAX
	JS	@@100
	ADD	EAX,U4 FS:[TSS_WINDOW_TOP]
	CMP	EAX,U4 FS:[TSS_WINDOW_BOTTOM]
	JG	@@100
	OR	EAX,EAX
	JS	@@100
	CMP	EAX,U4 FS:[TSS_CRT_HEIGHT]
	JGE	@@100

	IMUL	U4 FS:[TSS_CRT_WIDTH]
	ADD	EAX,U4 [SYS_TEXTBASE]
	ADD	EBX,EAX
	MOV	EAX,U4 SF_PARAM1[EBP]
	MOV	U4 [EBX],EAX

	POP	EBP
	XOR	EDX,EDX
	MOV	EAX,1
	RET
@@100:	POP	EBP
	XOR	EDX,EDX
	XOR	EAX,EAX
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
CP_PLOT_BORDER_I1::
	PUSH	EBP
	MOV	EBP,ESP
	MOV	EBX,U4 SF_PARAM2[EBP]
	MOV	EAX,U4 SF_PARAM3[EBP]

	MOV	EDX,-4
	CMP	EBX,EDX
	JL	@@100
	ADD	EBX,U4 FS:[TSS_WINDOW_LEFT]
	MOV	EDX,U4 FS:[TSS_WINDOW_RIGHT]
	ADD	EDX,4
	CMP	EBX,EDX
	JG	@@100
	OR	EBX,EBX
	JS	@@100
	CMP	EBX,U4 FS:[TSS_CRT_WIDTH]
	JGE	@@100

	MOV	EDX,-1
	CMP	EAX,EDX
	JL	@@100
	ADD	EAX,U4 FS:[TSS_WINDOW_TOP]
	MOV	EDX,U4 FS:[TSS_WINDOW_BOTTOM]
	INC	EDX
	CMP	EAX,EDX
	JG	@@100
	OR	EAX,EAX
	JS	@@100
	CMP	EAX,U4 FS:[TSS_CRT_HEIGHT]
	JGE	@@100

	IMUL	U4 FS:[TSS_CRT_WIDTH]
	ADD	EAX,U4 [SYS_TEXTBASE]
	ADD	EBX,EAX
	MOV	EAX,U4 SF_PARAM1[EBP]
	MOV	U4 [EBX],EAX

	POP	EBP
	XOR	EDX,EDX
	MOV	EAX,1
	RET
@@100:	POP	EBP
	XOR	EDX,EDX
	XOR	EAX,EAX
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
GR_UPDATE_WINDOWS::
	PUSHAD				//-****
	MOV	ESI,U4 FS:[TSS_ABSOLUTE_ADDRESS]
	MOV	EDI,ESI
	JMP	@@1

@@10:	MOV	EAX,U4 TSS_FS[EDI]
	MOV	FS,AX
	PUSH	ESI
	MOV	ESI,MSG_UPDATE_ODES
	CALL	FIND_EXTERN
	JZ	@@11
	CALL	ESI
@@11:	POP	ESI
	BT	U4 FS:[TSS_CRT_FLAGS],CRTf_SHOW
	JNC	@@2
	PUSH	ESI
	MOV	ESI,MSG_DRAW_TASK_BORDER
	CALL	FIND_EXTERN
	JZ	@@12
	CALL	ESI
@@12:	POP	ESI
	BT	U4 [SYS_FLAGS],SYSf_TASK_LINKS_ALTERED
	JC	@@100
@@1:	MOV	EAX,U4 FS:[TSS_UPDATE_WINDOW]
	OR	EAX,EAX
	JZ	@@2
	CALL	EAX
@@2:	BT	U4 [SYS_FLAGS],SYSf_TASK_LINKS_ALTERED
	JC	@@100
	MOV	EDI,U4 FS:[TSS_NEXT_TSS]
	CMP	ESI,EDI
	JNE	@@10
@@100:	MOV	EAX,U4 TSS_FS[ESI]
	MOV	FS,AX
	POPAD				//+****
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
/*
  GrXorLine(&dst3,&src,&src2,d5,vga_image);
  for (col=0;col<d5;col++) {
    *dst3=*src^*src2;
    dst3+=4;
    src+=4;
    src2+=4;
  }
*/
GR_XOR_LINE::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EDI
	MOV	EAX,SF_PARAM2[EBP]
	MOV	EDX,U4 [EAX]

	MOV	EAX,SF_PARAM3[EBP]
	MOV	ESI,U4 [EAX]
	MOV	ECX,SF_PARAM4[EBP]
	MOV	EAX,SF_PARAM5[EBP]
	MOV	EDI,U4 [EAX]

@@5:	MOV	EAX,U4 [ESI]
	XOR	EAX,U4 [EDX]
	MOV	U4 [ESI],EAX
	CMP	U4 [EDI],EAX
	JNE	@@7
	STOSD
	ADD	ESI,4
	ADD	EDX,4
	LOOP	@@5
	MOV	EAX,SF_PARAM5[EBP]
	MOV	U4[EAX],EDI

	MOV	EAX,SF_PARAM1[EBP]
	MOV	EDI,U4 [EAX]
	MOV	ECX,SF_PARAM4[EBP]
	ADD	EDI,ECX
	ADD	EDI,ECX
	ADD	EDI,ECX
	ADD	EDI,ECX
	JMP	@@100

@@6:	MOV	EAX,U4 [ESI]
	XOR	EAX,U4 [EDX]
	MOV	U4 [ESI],EAX
@@7:	STOSD
	ADD	ESI,4
	ADD	EDX,4
	LOOP	@@6
	MOV	EAX,SF_PARAM5[EBP]
	MOV	U4[EAX],EDI

	MOV	EBX,REVERSE_BITS_TABLE
	MOV	EAX,SF_PARAM3[EBP]
	MOV	ESI,U4 [EAX]
	MOV	ECX,SF_PARAM4[EBP]
	MOV	EAX,SF_PARAM1[EBP]
	MOV	EDI,U4 [EAX]
@@10:	LODSD
	XLATB
	ROR	EAX,8
	XLATB
	ROR	EAX,8
	XLATB
	ROR	EAX,8
	XLATB
	ROR	EAX,8
	STOSD
	LOOP	@@10

@@100:	MOV	EAX,SF_PARAM3[EBP]
	MOV	U4[EAX],ESI
	MOV	EAX,SF_PARAM1[EBP]
	MOV	U4[EAX],EDI
	MOV	EAX,SF_PARAM2[EBP]
	MOV	U4[EAX],EDX
	POP	EDI
	POP	ESI
	POP	EBP
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
/*
  GrPlotChar(font_ptr,cur_ch.u1[1],&dst2,d1,d2);

  for (plane=0x01;plane!=0x10;plane<<=1) {
    font_ptr2=font_ptr;
    if (cur_ch.u1[1] & plane) {
      for (ch_line=0;ch_line<FONT_HEIGHT;ch_line++) {
	*dst2|=*font_ptr2++;
	dst2+=d1;
      }
    } else {
      for (ch_line=0;ch_line<FONT_HEIGHT;ch_line++) {
	*dst2&=~*font_ptr2++;
	dst2+=d1;
      }
    }
    dst2+=d2;
  }
*/
GR_PLOT_CHAR::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EDI
	MOV	EDX,1 //EDX=plane
	MOV	EBX,U4 SF_PARAM4[EBP]	//EBX=d1
	MOV	EAX,U4 SF_PARAM3[EBP]	//EDI=dst2
	MOV	EDI,U4 [EAX]		//EDI=dst2
@@10:	MOV	ESI,U4 SF_PARAM1[EBP]	//ESI=font_ptr2
	TEST	U4 SF_PARAM2[EBP],EDX
	JZ	@@30

@@20:	LODSD
	OR	U1 [EDI],AL
	ADD	EDI,EBX
	OR	U1 [EDI],AH
	ADD	EDI,EBX
	ROR	EAX,16
	OR	U1 [EDI],AL
	ADD	EDI,EBX
	OR	U1 [EDI],AH
	ADD	EDI,EBX
	LODSD
	OR	U1 [EDI],AL
	ADD	EDI,EBX
	OR	U1 [EDI],AH
	ADD	EDI,EBX
	ROR	EAX,16
	OR	U1 [EDI],AL
	ADD	EDI,EBX
	OR	U1 [EDI],AH
	ADD	EDI,EBX
	JMP	@@40

@@30:	LODSD
	NOT	EAX
	AND	U1 [EDI],AL
	ADD	EDI,EBX
	AND	U1 [EDI],AH
	ADD	EDI,EBX
	ROR	EAX,16
	AND	U1 [EDI],AL
	ADD	EDI,EBX
	AND	U1 [EDI],AH
	ADD	EDI,EBX
	LODSD
	NOT	EAX
	AND	U1 [EDI],AL
	ADD	EDI,EBX
	AND	U1 [EDI],AH
	ADD	EDI,EBX
	ROR	EAX,16
	AND	U1 [EDI],AL
	ADD	EDI,EBX
	AND	U1 [EDI],AH
	ADD	EDI,EBX

@@40:	ADD	EDI,U4 SF_PARAM5[EBP]
	SHL1	EDX
	CMP	EDX,0x10
	JNE	@@10

	MOV	EAX,SF_PARAM3[EBP]
	MOV	U4[EAX],EDI
	POP	EDI
	POP	ESI
	POP	EBP
	RET
////**************************PROCEDURE*************************
	ALIGN	8,0x90
/*
  GrPlotBackground(cur_ch.u1[1],&dst,d1,d2);

  for (plane=0x10;plane!=0x100;plane=plane<<1) {
    d=(cur_ch.u1[1] & plane) ? 0xFF:0x00;
    for (ch_line=0;ch_line<FONT_HEIGHT;ch_line++) {
      *dst=d;
      dst+=d1;
    }
    dst+=d2;
  }
*/
GR_PLOT_BACKGROUND::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	EDI
	MOV	EDX,0x10 //EDX=plane
	MOV	EBX,U4 SF_PARAM3[EBP]	//EBX=d1
	MOV	EAX,U4 SF_PARAM2[EBP]	//EDI=dst
	MOV	EDI,U4 [EAX]		//EDI=dst

@@10:	XOR	EAX,EAX
	TEST	U4 SF_PARAM1[EBP],EDX
	JZ	@@20
	DEC	EAX

@@20:	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX
	MOV	U1 [EDI],AL
	ADD	EDI,EBX

	ADD	EDI,U4 SF_PARAM4[EBP]
	SHL1	EDX
	CMP	EDX,0x100
	JNE	@@10

	MOV	EAX,SF_PARAM2[EBP]
	MOV	U4[EAX],EDI
	POP	EDI
	POP	EBP
	RET

