class WordNode
{
  WordNode *left,*right;
  I1 word[128];
};


void AddNode(WordNode **root,WordNode *w)
{
  WordNode *r=*root;
  I8 i;
  if (!r) {
    *root=w;
    return;
  }
  i=StrCmp(r->word,w->word);
  if (i>0) {
    if (r->left)
      AddNode(&r->left,w);
    else
      r->left=w;
  } else if (i<0) {
    if (r->right)
      AddNode(&r->right,w);
    else
      r->right=w;
  } else
    Free(w);
}

void DisplayTree(WordNode *root)
{
  if (root) {
    DisplayTree(root->left);
    coutln root->word;
    DisplayTree(root->right);
  }
}

U8 word_count=0;
I1 *word_array[65536];

void CollectTree(WordNode *root)
{
  if (root) {
    CollectTree(root->left);
    word_array[word_count++]=root->word;
    CollectTree(root->right);
  }
}




void GodTalk()
{
  WordNode *w,*root=NULL;
  I1 *buf=ReadTextFile("D:/TEXT/BRIEF/AUGUST.TXT");
  I1 ch,*ptr=buf,*ptr2;
  U8 i;
  while (ch=*ptr++){
    while (ch && (ToUpper(ch)<'A' || ToUpper(ch)>'Z'))
      ch=*ptr++;
    if (ch) {
      ptr2=ptr-1;
      while (ToUpper(ch)>='A' && ToUpper(ch)<='Z')
	ch=*ptr++;
      ptr--;
      *ptr=0;
      w=MAllocZ(sizeof(WordNode));
      StrCpy(w->word,ptr2);
      AddNode(&root,w);
      *ptr=ch;
    }
  }
  Free(buf);
  word_count=0;
  CollectTree(root);
  for (i=0;i<word_count;i++)
    coutln i,":",word_array[i];
  PrintF("Word Count:%d\r\n",word_count);
  while (ch!=CH_ESC) {
    ch=GetCharNoEcho;
//    i=BootTime;
    i=keyboard_evt_time;
    PrintF("%08X %04X %s\r\n",i,i%word_count,word_array[i%word_count]);
  }
}


GodTalk;
