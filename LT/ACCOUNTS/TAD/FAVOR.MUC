You can access your own TODO/favorites file with CTRL-SHIFT-F.
-] **LEGAL STUFF:**
  	This file is where I set my plans.  There are no guarentees.  I work 
"iteratively" when programming--often writing bad code to experiment with 
and later changing it on a priority basis.  I often change my mind and since 
no one has returned an email or sent money, I feel little obligation to keep 
promises, especially when they seem like bad ideas later.  The order things 
are listed does not necessarily reflect the order they will be done--I often 
do stuff when I'm in the mood.
	There is a serious flaw with this operating system.  I cannot 
implemented 24-bit graphics (and higher resolution) without rewriting stuff 
because it spends all it's time updating a small screen and a big one would 
be much slower.  It would need to keep track of what parts of the screen 
changed and scrolling text and stuff presents problems.
	A pipe dream is getting a 64-bit CPU made.  A graphics card with a 
layer for text (one font) and a persistent layer and continuously updated 
layer would be nice.
	With a duel processing CPU, one CPU could be devoted to graphics, but 
I'm not sure how intangled the task of updatining screen memory would be.
-] HANDY FILE LINKS
  
[::/LT/OSMain/SYSTEXT.CPZ,OS_SYSTEXT] Goto OS Systext
[::/LT/COMPILE/COMPILE.CPZ,COMPILE_SYSTEXT] Goto Compiler Systext

[::/LT/DOC/Help.TXZ] ::/LT/DOC/Help.TXZ
[::/LT/DOC/GuideLines.TXZ] ::/LT/DOC/GuideLines.TXZ
[::/LT/DOC/OSGlossary.GLZ] ::/LT/DOC/OSGlossary.GLZ
[::/LT/DOC/Graphics.TXZ] ::/LT/DOC/Graphics.TXZ
[::/LT/DOC/Quirks.TXZ] ::/LT/DOC/Quirks.TXZ
[::/LT/DOC/Install.TXZ] ::/LT/DOC/Install.TXZ
[::/LT/DOC/Tips.TXZ] ::/LT/DOC/Tips.TXZ 
[::/LT/DOC/Dollar.TXZ] ::/LT/DOC/Dollar.TXZ 
[::/LT/DOC/News.TXZ] ::/LT/DOC/News.TXZ
[::/LT/ADAM/EDIT.MUZ] ::/LT/ADAM/EDIT.MUZ
    +] THINGS WHICH MIGHT CHANGE
  
-] HIGH PRIORITY
  
* $CL$ might have bugs
* ellipses and arcs--delayed because I don't see a clear way to do them, 
efficiently.  Not sure how they should be added to CTRL-R.

* prtscrn
* boot Cd
* silent 
* log name generator
* fix demodoc

* something makes OPtEnd not right

* see if turning-off word wrap works

* printf %g has bugs?
* function requires at least one statement;

* saw bug with CTRL-R not having right offset

* when placing $IS$ or $IT$ on clipboard, increments number.

* SprintF NaN,Inf; GetF Inf
* GetF date codes

* make grelem insert use l->mem_tss?

* maybe improve floating point compilation.

* Animation?--lost interest since my comics would require added text output 
to grelems.  Will offer frame-to-frame [IncCompress] IncCompress()-based
  thing eventually, 
and probably an interpolating scheme where GED_SHIFT_ORIGIN is time 
dependent.
* fix compiler to import C+ function's--not on my radar now, might be 
canceled
* fix reExtern in dynamic-compiled mode, might invent new varient of 
"extern".--not on my radar might get canceled

* The GrElem types will be expanded to 3D, I'm pretty sure, but I won't 
guarentee.  GrCircle is not implemented because it can't be rotated 
properly.  Might offer trig-based circle if transform is active.

* Is there a problem with Ltf's not using mem_tss?

* Might be problem with NOP in OPT pass1 for NO_PUSH in expressions besides 
assignments.  Is ShiftNoPush fully implemented?

* Out of RAM except, merge large memory chunks when Free'd.
* Make driveutil with maps and adddrive and partition report
* Do something about extended ASCII in fonts.
* Make font selectable, demo character graphics.
* Add mouse and other cmds to macro capture?--not on my radar, don't see a 
feasable method--stuff moves around.
+] DOCUMENTATION
  * no U2 branch in 32 bit segments?
* Document LTF callbacks
+] PERPETUAL TASKS
  * Change hardcoded stuff to SysText
* rename to use long filenames
* Too much preemption turned off?
* Look for mem leaks.   InstallBoot seems to leak now?
* Shift Stuff around in files, move stuff out of OSmain.  Might put font in a
  file.
+] COMPATIBILITY
    * UNIT detect on CD-Boots
* TAD5 CD-ROM doesn't close
* Mom's floppy
* allow Hd boots to secondary IDE or slave drives
* mouse IRQ doesn't work on TAD5.
  +] GRAPHICS
  * 24 Bit (except would be incompatible)
+] DISK
  * Improve ATAPI read-ahead
* Clear unused portion of clusters on disk writes
* try not using FDCreadtrack on Mom's computer
* read diskdrive id info (set_native address) to handle more drive types,
  implement controls to prevent out-of-partition-range writes.
* removable media id  (critical for resident files)
* Flash cards: Flash mem cards might offer a removable, bootable media which
  will enable people to run without repartitioning--floppy is kinda small.  DVD
  doesn't allow writing.  Problem with flash is it is not standard equipment on
  computers.  Would be very convenient for developing and distributing
  operating systems.  I think LILO will allow Flash booting.
* Report just one error per read track (Floppy)
+] FILE
  * CurDir per partition?  Path?
* Make use of flag potential in SysFindFiles and possibly LTFileAccess
* make contiguous flag right
* implement fixed position files
* Throw exception on invalid [C:/LT/OSMain/Str1a.CPZ,1038] GetFFlags() or
  filename.
+] C+ LIBRARY
  * Improve Random number generator.
* add field overflow I1 "t='*'"
* Integer Money value for printf/getf--in pennies
* Implement format codes into GetF
* Date Input
* flag for comma's in numeric output (printf). eg "1,000,000" instead of
  "1000000".
+] APPLICATIONS
  * Budget Program
+] EDITOR
  * Might allow constantly centered mode--cursor stays centered on
  screen(vertically).
* Maybe allow SearchString flags in Links
* Add write protect mode with indicator and toggle
* Undo would be nice--could do differences and save(in mermory) compressed
  after each change
+] INTERNET
  * TCP/IP (Very long-way off)
+] IDE
  * In editor, color C+ keywords, comments, etc. (unlikely to be implimented
  any time soon)
* Show code size/cpu cycles in editor column, next to code. (not soon)
+] ASSEMBLER
  * 64 bit instructions
* 16 bit Dasm is bad
* Bug: patched value in DU4 after DU4 with '?';
+] DEBUGGING
  * Improve fault handling--has inaccuracies--would be nice to display mem
  access violation addresses.
+] COMPILER
  * complex and matrix as internal types
* paren warning  (Had idea of generating a warning if you used parens
  unnecessarily to encourage learning operator precidence.  Probably wont.)
* combine double constants in optimization
* typeof()
* reinclude of recursive functions fails
* Switch statement with sparce cases (low priority)
* switch to arbitrary named attributes like "fmtdata" or "fmtstr".  Might
  allow arbitrary supplimental data in class definitions.
* do more error handling in parse_var_list
* goto labels scope issues?
* No string default function parameters inside
  [::/LT/DOC/OSGlossary.GLZ,Static Compiled Mode] Static Compiled Mode. 
* Multidimensional arrays (currently you must declare classes for rows)
* ic_line in fix-up--kinda kludged right now.  Macro's generate bad linenums.
* typedefs
* var declarations after class definitions (Not a priority)
* Convert to correct C pointer arithmetic
* In Static compiled mode, do away with indirect extern calls.  (low priority)
* glbl vars--&function ptrs
* sizeof(class.class), offset(class.class.member)
* local function(...) (might be okay?)
+] MEM
  * Redo mem Garbage collection on task and do one on system... but these
  don't help, so probably won't do it.
+] LOW PRIORITY
  * Finish scan tables(num pad,caps lock)
* sort options for findfiles
* add alarm feature--just beep at certain time
* Strip cursors,etc from WORDSTAT and tabs from DIFF processing (Might be
  fixed)
+] TESTING
  * Tabs2Spaces
+] INVESTIGATE
  *
+] BUGS
  * Find and replace in editor on plain text--might have been a fluke
  involving '$'?
* Editor doesnt work well with overstrike mode (tabs especially?)

+] NASTY BUGS
  *
+] BUGS WHICH MIGHT EXIST
  *
+] BUGS WHICH MIGHT BE FIXED
  *
+] MIGHT BE BUGS
  * recalc_start probably needs to be more accurate before recalculating.
* probably have issues with high-speed cursor movements and recalc_start
* In LtfPutS, might need to alloc extendstring, ect from different heap.
