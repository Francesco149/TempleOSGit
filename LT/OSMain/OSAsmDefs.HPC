		STRUC 0
SF_RBP: 	DU64	?;
SF_RIP: 	DU64	?;
SF_ARG1:	DU64	?;
SF_ARG2:	DU64	?;
SF_ARG3:	DU64	?;
SF_ARG4:	DU64	?;
SF_ARG5:	DU64	?;
SF_ARG6:	DU64	?;
SF_ARG7:	DU64	?;
SF_ARG8:	DU64	?;
		ENDS

		STRUC 0
GDT_NULL_SEL:		DU64	?,?;
GDT_BOOT_DS_SEL:	DU64	?,?;
GDT_BOOT_CS_SEL:	DU64	?,?;
GDT_CS_SEL:		DU64	?,?;
GDT_CS64_SEL:		DU64	?,?; //The [::/LT/Doc/Constitution.TXZ] Constitution says just ring0.
GDT_CS64_RING3_SEL:	DU64	?,?; //[::/LT/Demo/Lectures/Ring3.CPZ] Ring3, in case you want to play around.
GDT_ZERO_DS_SEL:	DU64	?,?;
GDT_ZERO_DS_RING3_SEL:	DU64	?,?;
GDT_CPU_TR_SELS:	DU8	MP_MAX_PROCESSORS*16 DUP(?);
GDT_CPU_TR_RING3_SELS:	DU8	MP_MAX_PROCESSORS*16 DUP(?);
GDTTAB_SIZE:
	ENDS

#assert GDTTAB_SIZE/16==MAXGDT


	STRUC 0 [C:/LT/OSMain/Adam1a.HPZ,2725] Redundant C+ Struct
EXCEPT_NEXT:		DU64	?;
EXCEPT_LAST:		DU64	?;
EXCEPT_HANDLER_START:	DU64	?;
EXCEPT_HANDLER_SKIP:	DU64	?;
EXCEPT_RSP:		DU64	?;
EXCEPT_RBP:		DU64	?;
EXCEPT_RFLAGS:		DU64	?;
EXCEPT_RSI:		DU64	?;
EXCEPT_RDI:		DU64	?;
EXCEPT_R10:		DU64	?;
EXCEPT_R11:		DU64	?;
EXCEPT_R12:		DU64	?;
EXCEPT_R13:		DU64	?;
EXCEPT_R14:		DU64	?;
EXCEPT_R15:		DU64	?;
EXCEPT_STRUCT_SIZE:
#assert EXCEPT_STRUCT_SIZE==sizeof(ExceptStruct)
	ENDS

	STRUC	0
BPT_NEXT:		DU64	?;
BPT_ADDR:		DU64	?;
BPT_U8:			DU8	?,7 DUP(?);
	ENDS

	STRUC	0
TSTK_NEXT:		DU64	?;
TSTK_SIZE:		DU64	?;
TSTK_PTR:		DU64	?;
TSTK_BASE:
#assert TSTK_BASE==sizeof(TaskStk)
	ENDS

	STRUC	0 [/LT/OSMain/Adam1a.HPZ,class TaskStruct] Redundent C+ Struct
TASK_ADDR:		DU64	?;
TASK_SIGNATURE: 	DU32	?;
TASK_IN_QUEUE_SIGNATURE: DU32	?;
TASK_TASK_FLAGS: 	DU64	?;
TASK_LOCKED_FLAGS: 	DU64	?;
TASK_DISPLAY_FLAGS:	DU32	?;
TASK_WIN_INHIBIT:	DU32	?;
TASK_WAKE_JIFFY:	DU64	?;

TASK_CODE_HEAP:	 	DU64	?;
TASK_DATA_HEAP:	 	DU64	?;

TASK_NEXT_LTF:		DU64	?;
TASK_LAST_LTF:		DU64	?;
TASK_WIN_LEFT:		DU64	?;
TASK_WIN_RIGHT:		DU64	?;
TASK_WIN_TOP: 		DU64	?;
TASK_WIN_BOTTOM:	DU64	?;

TASK_CUR_PRT:		DU64	?;
TASK_CUR_DIR:	 	DU64	?;

TASK_PARENT_TASK: 	DU64	?;
TASK_NEXT_TASK:		DU64	?;	//ABS ADDR OF NEXT TASK
TASK_LAST_TASK:		DU64	?;	//ABS ADDR OF LAST TASK
TASK_NEXT_INPUT_FILTER_TASK:	DU64	?;
TASK_LAST_INPUT_FILTER_TASK:	DU64	?;
TASK_NEXT_SIBLING_TASK:	DU64	?;
TASK_LAST_SIBLING_TASK:	DU64	?;
TASK_NEXT_CHILD_TASK:	DU64	?;
TASK_LAST_CHILD_TASK:	DU64	?;

TASK_NEXT_KEY_DEV:	DU64	?;
TASK_LAST_KEY_DEV:	DU64	?;

//These are derived
TASK_WIN_WIDTH:		DU64	?;
TASK_WIN_HEIGHT:	DU64	?;
TASK_WIN_PIXEL_LEFT:	DU64	?;
TASK_WIN_PIXEL_RIGHT:	DU64	?;
TASK_WIN_PIXEL_WIDTH:	DU64	?;
TASK_WIN_PIXEL_TOP:	DU64	?;
TASK_WIN_PIXEL_BOTTOM:	DU64	?;
TASK_WIN_PIXEL_HEIGHT:	DU64	?;
TASK_WIN_BORDER_PIXEL_LEFT:	DU64	?; //These are derived
TASK_WIN_BORDER_PIXEL_RIGHT: 	DU64	?;
TASK_WIN_BORDER_PIXEL_TOP:	DU64	?;
TASK_WIN_BORDER_PIXEL_BOTTOM: 	DU64	?;

TASK_WIN_SCROLL_X: 	DU64	?;
TASK_WIN_SCROLL_Y: 	DU64	?;
TASK_WIN_SCROLL_Z: 	DU64	?;
TASK_WIN_MAX_REFRESH:	DU64	?;
TASK_SNAP_X:		DU64	?;
TASK_SNAP_Y:		DU64	?;
TASK_SNAP_Z:		DU64	?;
TASK_MOUSE_SPEED_X:	DU64	?;
TASK_MOUSE_SPEED_Y:	DU64	?;
TASK_MOUSE_SPEED_Z:	DU64	?;


TASK_RIP:		DU64	?;
TASK_RFLAGS:		DU64	?;
TASK_RSP:		DU64	?;
TASK_RSI:		DU64	?;
TASK_RAX:		DU64	?;
TASK_RCX:		DU64	?;
TASK_RDX:		DU64	?;
TASK_RBX:		DU64	?;
TASK_RBP:		DU64	?;
TASK_RDI:		DU64	?;
TASK_R8:		DU64	?;
TASK_R9:		DU64	?;
TASK_R10:		DU64	?;
TASK_R11:		DU64	?;
TASK_R12:		DU64	?;
TASK_R13:		DU64	?;
TASK_R14:		DU64	?;
TASK_R15:		DU64	?;
TASK_GS: 		DU64	?;

TASK_FPU_MMX:		DU64	?;
TASK_TIME_SLICE_START:	DU64	?;
TASK_TOTAL_TIME:	DU64	?;
TASK_PAUSE_START:	DU64	?;
TASK_PAUSE_TOTAL:	DU64	?;
TASK_SWAP_CNTER:	DU64	?;

TASK_UPDATE_WIN:	DU64	?;
TASK_DRAW_IT:		DU64	?;
TASK_TASK_TITLE:	DU8	TASK_TITLE_LEN+1 DUP (?);
TASK_TASK_NAME:		DU8	TASK_NAME_LEN+1 DUP (?);
TASK_WALLPAPER_DATA:	DU8	TASK_WALLPAPER_DATA_SIZE DUP (?);
TASK_SCROLL_SPEED:	DU32	?;
TASK_TEXT_ATTR:		DU8	?;
TASK_BORDER_ATTR:	DU8	?;
TASK_WIN_Z_NUM:		DU16	?;

TASK_STK:		DU64	?;
TASK_NEXT_EXCEPT:	DU64	?;
TASK_LAST_EXCEPT:	DU64	?;
TASK_EXCEPT_RBP:	DU64	?;
TASK_EXCEPT_ARGC:	DU64	?;
TASK_EXCEPT_ARGV:	DU64	?;
TASK_CATCH_EXCEPT:	DU8	?;
TASK_IGNORE_EXCEPT:	DU8	?;
			DU8	6 DUP(?);
TASK_BPT_LIST:		DU64	?;
TASK_NEXT_CTRL:		DU64	?;
TASK_LAST_CTRL:		DU64	?;
TASK_CUR_MENU:		DU64	?;
TASK_NEXT_SETTINGS:	DU64	?;
TASK_NEXT_ODE:		DU64	?;
TASK_LAST_ODE:		DU64	?;
TASK_LAST_ODE_TIME:	DU64	?;
TASK_HASH_TABLE: 	DU64	?;
TASK_ACCT:		DU64	?;

TASK_NEXT_SERVANT_CMD:	DU64	?;
TASK_LAST_SERVANT_CMD:	DU64	?;
TASK_NEXT_MASTER_CMD:	DU64	?;
TASK_LAST_MASTER_CMD:	DU64	?;

TASK_NEXT_LEX:		DU64	?;
TASK_LAST_LEX:		DU64	?;

TASK_WIN_OLD_LEFT:	DU64	?;
TASK_WIN_OLD_RIGHT:	DU64	?;
TASK_WIN_OLD_TOP: 	DU64	?;
TASK_WIN_OLD_BOTTOM:	DU64	?;

TASK_TASK_END_CB:	DU64	?;
TASK_SONG_TASK:		DU64	?;
TASK_ANIMATE_TASK:	DU64	?;
TASK_USER_NUM:		DU32	?;
TASK_FAULT_NUM:		DU32	?;
TASK_FAULT_ERR_CODE:	DU64	?;
TASK_ANSWERS:		DU64	4 DUP(?);
TASK_ANSWERS_TYPES:	DU16	4 DUP(?);
TASK_ANSWERS_DISPLAYED:	DU64	?;
TASK_DBG:		DU64	?;
TASK_POPUP:		DU64	?;
TASK_HORZ_SCROLL:	DU8	sizeof(WinScrollState) DUP(?);
TASK_VERT_SCROLL:	DU8	sizeof(WinScrollState) DUP(?);

TASK_USER_DATA0:	DU64	?;
TASK_USER_DATA1:	DU64	?;
TASK_USER_DATA2:	DU64	?;
TASK_USER_DATA3:	DU64	?;
TASK_STRUCT_SIZE:
#assert TASK_STRUCT_SIZE==sizeof(TaskStruct)
	ENDS

	STRUC 0
HT_NEXT:		DU64	?;
HT_NEXT_ADDED:		DU64	?;
HT_LAST_ADDED:		DU64	?;
HT_MASK:		DU64	?;
HT_LOCKED_FLAGS:	DU64	?;
HT_BODY:		DU64	?;
	ENDS

	STRUC 0
HTE_NEXT:		DU64	?;
HTE_NEXT_ADDED:		DU64	?;
HTE_LAST_ADDED:		DU64	?;
HTE_STR:		DU64	?;
HTE_TYPE:		DU32	?;
HTE_USE_CNT:		DU32	?;
HTE_SRC_LINK:		DU64	?;
HTE_INDEX:		DU64	?;
HTE_DEBUG:		DU64	?;
HTE_INDENT:		DU64	?;
HTE_IMPORT_NAME:	DU64	?;
HTE_LIST:		DU64	?;
HTE_VAL:		DU64	?;
	ENDS

	STRUC 0
SP_R15: 	DU64	?;
SP_R14: 	DU64	?;
SP_R13: 	DU64	?;
SP_R12: 	DU64	?;
SP_R11: 	DU64	?;
SP_R10: 	DU64	?;
SP_R9:	 	DU64	?;
SP_R8:	 	DU64	?;
SP_RDI: 	DU64	?;
SP_RSI: 	DU64	?;
SP_RBP: 	DU64	?;
SP_RBX: 	DU64	?;
SP_RDX: 	DU64	?;
SP_RCX: 	DU64	?;
SP_RAX: 	DU64	?;
SP_STRUCT_SIZE:
SP_RIP: 	DU64	?;
SP_ARG1:	DU64	?;
SP_ARG2:	DU64	?;
SP_ARG3:	DU64	?;
SP_ARG4:	DU64	?;
SP_ARG5:	DU64	?;
SP_ARG6:	DU64	?;
SP_ARG7:	DU64	?;
SP_ARG8:	DU64	?;
SP_ARG9:	DU64	?;
SP_ARG10:	DU64	?;
SP_ARG11:	DU64	?;
SP_ARG12:	DU64	?;
	ENDS

	STRUC	0
ATE_NEXT:	DU64	?;
ATE_BASECODE:	DU16	?;
ATE_CH:		DU8	?,?;
ATE_PAD2:	DU32	?;
ATE_STRUCT_SIZE:
#assert ATE_STRUCT_SIZE==sizeof(ArcTableEntry)
	ENDS

	STRUC	0
ACS_SRC_POS:		DU64	?;
ACS_SRC_SIZE:		DU64	?;
ACS_DST_POS:		DU64	?;
ACS_DST_SIZE:		DU64	?;
ACS_SRC_BUF:		DU64	?;
ACS_DST_BUF:		DU64	?;
ACS_MIN_BITS:		DU64	?;
ACS_MIN_TABLE_ENTRY:	DU64	?;
ACS_CUR_ENTRY:		DU64	?;
ACS_NEXT_ENTRY:		DU64	?;
ACS_CUR_BITS_IN_USE:	DU64	?;
ACS_NEXT_BITS_IN_USE:	DU64	?;
ACS_STK_PTR:		DU64	?;
ACS_STK_BASE:		DU64	?;
ACS_FREE_INDEX:		DU64	?;
ACS_FREE_LIMIT:		DU64	?;
ACS_SAVED_BASECODE:	DU64	?;
ACS_ENTRY_USED:		DU64	?;
ACS_LAST_CH:		DU64	?;
ACS_COMPRESS:		DU64	(ARC_MAX_TABLE_ENTRY+1)*2 DUP(?);
ACS_HASH:		DU64	ARC_MAX_TABLE_ENTRY+1 DUP(?);
ACS_STRUCT_SIZE:
#assert ACS_STRUCT_SIZE==sizeof(ArcCs)
	ENDS

	STRUC	0
MP_JMP:			DU32	?;
MP_SYS_TEMP_PTR:	DU64	?;
	ENDS

	STRUC	0
CPU_ADDR:	DU64	?;
CPU_NUM:		DU64	?;
CPU_CPU_FLAGS:		DU64	?;
CPU_STARTUP_RIP:	DU64	?;
CPU_IDLE_POINT_HITS:	DU64	?;
CPU_IDLE_FACTOR:	DU64	?;
CPU_TOTAL_JIFFIES:	DU64	?;
CPU_SETH_TASK:		DU64	?;
CPU_IDLE_TASK:		DU64	?;
CPU_CMD_CTRL:		DU8	sizeof(MPCmdCtrl) DUP(?);
CPU_IDT:		DU64	?;
CPU_TR:			DU64	?;
CPU_SWAP_CNTER:		DU64	?;
CPU_TIMER_IRQ_CHAIN:	DU64	?;
CPU_DYING_TASK_LIST:	DU64	?;
CPU_TSS:		DU64	?;
CPU_WALLPAPER_DATA:	DU8	CPU_WALLPAPER_DATA_SIZE DUP (?);
CPU_START_STK:	DU64	8 DUP(?);
CPU_START_STK_TOP:
CPU_STRUCT_SIZE:
#assert CPU_STRUCT_SIZE==sizeof(CPUStruct)
	ENDS

	STRUC 0
BP_LOCKED_FLAGS:	DU64	?;
BP_SIZE:		DU64	?;
BP_MEM_FREE_LIST:	DU64	?;
BP_MEM_FREE_2MEG_LIST:	DU64	?;
BP_FREE_PAGE_HASH:	DU64	FREE_PAGE_HASH_SIZE DUP(?);
BP_FREE_PAGE_HASH2:	DU64	64-PAGE_BITS DUP(?);
BP_STRUCT_SIZE:
	ENDS

	STRUC 0
HC_BP:			DU64	?;
HC_SIGNATURE:		DU32	?,?;
HC_LOCKED_FLAGS:	DU64	?;
HC_FLAGS:		DU64	?;
HC_MEM_TASK:		DU64	?;
HC_NEXT_MEM_BLK:	DU64	?;
HC_LAST_MEM_BLK:	DU64	?;
HC_MALLOC_FREE_LIST:	DU64	?;
HC_NEXT_UM:		DU64	?;
HC_LAST_UM:		DU64	?;
HC_HEAP_HASH:		DU8	HEAP_HASH_SIZE DUP(?);
HC_STRUCT_SIZE:
	ENDS


	STRUC 0
MB_NEXT:	DU64	?;
MB_LAST:	DU64	?;
MB_SIGNATURE:	DU32	?;
MB_SIZE:	DU32	?;
MB_STRUCT_SIZE:
	ENDS


#if _CFG_HEAP_DBG
	STRUC 0 	//AVAILABLE TO MALLOC MEM
UUM_HEAP_CTRL:	DU64	?;
UUM_CALLER1:	DU64	?;
UUM_CALLER2:	DU64	?;
UUM_NEXT:	DU64	?;
UUM_SIZE:	DU64	?;
UUM_STRUCT_SIZE:
	ENDS

	STRUC 0
UM_HEAP_CTRL:	DU64	?;
UM_CALLER1:	DU64	?;
UM_CALLER2:	DU64	?;
UM_NEXT:	DU64	?;
UM_LAST:	DU64	?;
UM_SIZE:	DU64	?;
UM_START:	DU8	?;
	ENDS
#else
	STRUC 0 	//AVAILABLE TO MALLOC MEM
UUM_HEAP_CTRL:
UUM_NEXT:	DU64	?;
UUM_SIZE:	DU64	?;
UUM_STRUCT_SIZE:
	ENDS

	STRUC 0
UM_HEAP_CTRL:	DU64	?;
UM_NEXT:
UM_LAST:
UM_SIZE:	DU64	?;
UM_START:	DU8	?;
	ENDS
#endif
