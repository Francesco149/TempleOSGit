extern void PutSysText(I1 *name);
extern BoolU8 Cd(I1 *name,BoolU4 make_dirs=FALSE);
extern BoolU8 MkDir(I1 *filename);
extern void Msg(U8 code,U8 p1,U8 p2,U8 flags=0);
extern I1 PartitionToDrive(LTPartition *p=NULL);
extern BoolU8 RBlks(LTPartition *p,U1 *buf, U8 blk, U8 cnt,BoolU4 unlock);
extern BoolU8 WBlks(LTPartition *p,U1 *buf, U8 blk, U8 cnt,BoolU4 unlock);
extern void InvalidateDiskCache(LTPartition *p,BoolU4 unlock);
extern BoolU8 Drive(I1 drive_letter);
extern LTFile *FOpen(I1 *filename,I1 *flags,U8 cnt=0);
extern U8 FSize(LTFile *f);
extern void FSync(LTFile *f);
extern BoolU8 FRBlks(LTFile *f,U1 *buf,U8 blk=LTFB_NEXT_BLK,U8 cnt=1);
extern BoolU8 FWBlks(LTFile *f,U1 *buf,U8 blk=LTFB_NEXT_BLK,U8 cnt=1);
extern void ReleaseTaskPartitions();
extern BoolU8 IsRaw();
extern void D(U1 *buf,U8 cnt=0x80,BoolU4 show_offset=TRUE);
extern void Dm(U1 *buf,U8 cnt=0x80);
extern void PrintF(I1 *fmt,...);
extern void MPIntAll(U8 num);
extern void XTalk(TssStruct *tss,I1 *fmt,...);

extern GrBitMap *GrBitMapNew(U8 type,U8 width,U8 height,TssStruct *tss=NULL);

extern void InitISOPartition(LTPartition *p,BoolU4 unlock);
extern BoolU8 FindISOFile(LTPartition *p,U8 cur_dir_cluster,I1 *name,LTDirEntry *result,
		     BoolU4 dir_only,BoolU4 file_only,BoolU4 unlock);
extern LTDirEntry *FindISOFiles(I1 *wild,U8 fuf_flags,LTDirEntry *parent=NULL);

extern void FreeLTFreeList(LTPartition *p,BoolU4 unlock);
extern void InitLTPartition(LTPartition *p,BoolU4 unlock);
extern void FormatLT(I1 drive_letter,BoolU4 quick=TRUE);
extern BoolU8 FindLTFile(LTPartition *p,U8 cur_dir_cluster,I1 *name,LTDirEntry *result,
		     BoolU4 dir_only,BoolU4 file_only,BoolU4 unlock);
extern U8 AllocLTClusters(LTPartition *p,U8 cnt, BoolU4 unlock);
extern BoolU8 NewLTDirEntry2(LTPartition *p,I1 *cur_dir,LTDirEntry *de,BoolU4 free_old_chain,BoolU4 unlock);
extern LTDirEntry *FindLTFiles(I1 *wild,U8 fuf_flags,LTDirEntry *parent=NULL);

extern TssStruct *Spawn(U1 *start_add,
	    I1 *desc=NULL,
	    TssStruct *parent=NULL, //NULL means adam
	    I1 *account=NULL,	  //Null means use parent's
	    U8 stk=DEFAULT_STACK,
	    BoolU4 add_to_queue=TRUE);
extern void InitUserTask();

extern void AdamLog(I1 *fmt,...);
extern void Debugger(I1 *msg=NULL,U8 num=0);

#define DCF_IN_DOLLAR		1
#define DCF_LAST_DOLLAR		2
