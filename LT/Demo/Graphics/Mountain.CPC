#define __BIN_1_TYPE 0x00000002
#define __BIN_1_SIZE 0x0000007F
#define __BIN_1 "\x02\x01\x08\x02\x00\x00\x00\x05\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x02\x00\x00\x00\xF6\xFF\xFF\xFF\x05\x02\x00\x00\x00\xF6\xFF\xFF\xFF\x04\x00\x00\x00\x00\x00\x00\x00\x05\x02\x00\x00\x00\xF5\xFF\xFF\xFF\x06\x00\x00\x00\xEA\xFF\xFF\xFF\x05\x01\x00\x00\x00\xF2\xFF\xFF\xFF\x00\x00\x00\x00\xEA\xFF\xFF\xFF\x05\x02\x00\x00\x00\xE7\xFF\xFF\xFF\x02\x00\x00\x00\xE1\xFF\xFF\xFF\x05\x05\x00\x00\x00\xEA\xFF\xFF\xFF\x0A\x00\x00\x00\xF2\xFF\xFF\xFF\x05\xFF\xFF\xFF\xFF\xE9\xFF\xFF\xFF\xFB\xFF\xFF\xFF\xF3\xFF\xFF\xFF\x00"
#define __BIN_2_TYPE 0x00000002
#define __BIN_2_SIZE 0x00000090
#define __BIN_2 "\x02\x01\x08\x02\x00\x00\x00\x05\xFD\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\xF6\xFF\xFF\xFF\x05\x00\x00\x00\x00\xF5\xFF\xFF\xFF\x05\x00\x00\x00\xFB\xFF\xFF\xFF\x05\x05\x00\x00\x00\xFB\xFF\xFF\xFF\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\xF5\xFF\xFF\xFF\x04\x00\x00\x00\xEA\xFF\xFF\xFF\x05\xFF\xFF\xFF\xFF\xF2\xFF\xFF\xFF\xFE\xFF\xFF\xFF\xEA\xFF\xFF\xFF\x05\x00\x00\x00\x00\xE7\xFF\xFF\xFF\x00\x00\x00\x00\xE1\xFF\xFF\xFF\x05\x03\x00\x00\x00\xE9\xFF\xFF\xFF\x05\x00\x00\x00\xF4\xFF\xFF\xFF\x05\xFD\xFF\xFF\xFF\xE9\xFF\xFF\xFF\xF9\xFF\xFF\xFF\xF3\xFF\xFF\xFF\x00"
#define __BIN_3_TYPE 0x00000002
#define __BIN_3_SIZE 0x000000A1
#define __BIN_3 "\x02\x01\x08\x02\x00\x00\x00\x05\x00\x00\x00\x00\xF7\xFF\xFF\xFF\xFE\xFF\xFF\xFF\xFC\xFF\xFF\xFF\x05\xFE\xFF\xFF\xFF\xFC\xFF\xFF\xFF\xF9\xFF\xFF\xFF\x00\x00\x00\x00\x05\x00\x00\x00\x00\xF5\xFF\xFF\xFF\x05\x00\x00\x00\xFB\xFF\xFF\xFF\x05\x05\x00\x00\x00\xFB\xFF\xFF\xFF\x05\x00\x00\x00\x00\x00\x00\x00\x05\x00\x00\x00\x00\xF5\xFF\xFF\xFF\x04\x00\x00\x00\xEA\xFF\xFF\xFF\x05\xFF\xFF\xFF\xFF\xF2\xFF\xFF\xFF\xFE\xFF\xFF\xFF\xEA\xFF\xFF\xFF\x05\x00\x00\x00\x00\xE7\xFF\xFF\xFF\x00\x00\x00\x00\xE1\xFF\xFF\xFF\x05\x03\x00\x00\x00\xEA\xFF\xFF\xFF\x08\x00\x00\x00\xF2\xFF\xFF\xFF\x05\xFD\xFF\xFF\xFF\xEA\xFF\xFF\xFF\xFC\xFF\xFF\xFF\xF7\xFF\xFF\xFF\x00"






/* <1> <1> (image) */	/* <2> <2> (image) */	  /* <3> <3> (image) */


BoolI8 animate_done;
GrSprite *man_imgs[4]={__BIN_1,__BIN_2,__BIN_3,__BIN_2};
I64 x=0,y=0;

U0 DrawMountain(TaskStruct *task)
{
  GrDC *dc=GrDCAlias(gr_dc,task);
//"tP()" is a function holding time since boot, less pauses.
  I64 frame=4*Saw(tP(task),0.5),
      cx=task->win_pixel_width/2,
      cy=task->win_pixel_height/2;
  dc->color=BROWN;
  dc->pen_width=2;
  GrLine3(dc,cx-400,cy,0,    cx-30 ,cy-120,0);
  GrLine3(dc,cx-30,cy-120,0, cx    ,cy-160,0);
  GrLine3(dc,cx+160,cy,0,    cx,cy-160,0);
  GrLine3(dc,cx+80 ,cy-80,0, cx+160,cy-120,0);
  GrLine3(dc,cx+160,cy-120,0,cx+400,cy,0);

  GrLine3(dc,cx,cy,0,cx+100,cy-20,0);
  GrLine3(dc,cx+100,cy-20,0,cx-90,cy-40,0);
  GrLine3(dc,cx-90,cy-40,0,cx+70,cy-60,0);
  GrLine3(dc,cx+70,cy-60,0,cx-70,cy-60,0);
  GrLine3(dc,cx-70,cy-60,0,cx+60,cy-80,0);
  GrLine3(dc,cx+60,cy-80,0,cx-50,cy-100,0);
  GrLine3(dc,cx-50,cy-100,0,cx+30,cy-120,0);
  GrLine3(dc,cx+30,cy-120,0,cx-15,cy-140,0);

  dc->color=LTCYAN;
  GrRect(dc,0,0,task->win_pixel_width,74);
  GrFloodFill(dc,0,75);

  dc->color=BROWN;
  GrCircle(dc,cx+70,35,15);
  dc->color=YELLOW;
  GrFloodFill(dc,cx+70,35);

  dc->color=BROWN;
  GrPutS(dc,cx-8*FONT_WIDTH/2,cy-168,"Mt. Horeb");

  GrSpritePlot3(dc,x+cx,y+cy,0,man_imgs[frame&3]);
  GrDCDel(dc);
}

//This is the path of the man.
P3I32 mountain[19]={{0,0,0},{100,-20,0},{100,-20,0},{-100,-40,0},{-100,-40,0},
		  {80,-60,0},{80,-60,0},{-80,-60,0},{-80,-60,0},
		  {60,-80,0},{60,-80,0},{-60,-100,0},{-60,-100,0},{40,-120,0},
		  {40,-120,0},{-37,-140,0},{-37,-140,0},{0,-160,0},{0,-160,0}};

BoolI64 PlotMan(U0 *aux,I64 _x,I64 _y,I64 _z)
{ nounusedwarn aux,_z;
  x=_x; y=_y;
  Sleep(5);
  return TRUE;
}

U0 MountainTask(U64 dummy=0)
{
  nounusedwarn dummy;
//Most of the graphic shape routines can be called with
//a custom routine to plot the points.
//See [Graphics/Math] Graphics/Math.
  BSpline2(NULL,&mountain,19,&PlotMan);
  animate_done=TRUE;
}

U0 Mountain()
{
  LtfBottom; LtfClear;

  SettingsPush(Fs,TSF_SAME_SONG); //See [C:/LT/Adam/TaskSettings.APZ,3] SettingsPush
  try {
    WordStat(OFF);
    WinMax;
    WinBorder(OFF);
    Fs->text_attr=YELLOW<<4;
    Fs->update_win=&DrawMountain;

    animate_done=FALSE;
    Spawn(&MountainTask,NULL,"Animate",Fs);
    while (!animate_done)
      Yield;
  } catch
    CatchAll;
  SettingsPop(Fs,TSF_SAME_SONG);
}

//This is so I can use this file stand alone
//or as a component of a program.
#if IncludeDepth<2
Mountain;
#endif
