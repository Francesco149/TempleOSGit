#define __BIN_1_TYPE 0x00000002
#define __BIN_1_SIZE 0x00000138
#define __BIN_1 "\x02\x02\x05\x16\x00\x00\x00\x05\x00\x00\x00\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x05\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x31\x00\x00\x00\x09\x00\x00\x00\x05\x31\x00\x00\x00\x09\x00\x00\x00\x22\x00\x00\x00\x17\x00\x00\x00\x05\x22\x00\x00\x00\x16\x00\x00\x00\x14\x00\x00\x00\x06\x00\x00\x00\x02\x04\x11\x1B\x00\x00\x00\x00\x00\x00\x00\x2A\x00\x00\x00\x10\x00\x00\x00\x12\x22\x00\x00\x00\x08\x00\x00\x00\x0F\x00\x00\x00\x1D\x06\x00\x00\x00\x08\x00\x00\x00\xCE\xFF\xFF\xFF\xCE\xFF\xFF\xFF\x00\x00\x00\x00\x32\x00\x00\x00\xCE\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x32\x00\x00\x00\x00\x00\x00\x00\x32\x00\x00\x00\xCE\xFF\xFF\xFF\x32\x00\x00\x00\xCE\xFF\xFF\xFF\xCE\xFF\xFF\xFF\x32\x00\x00\x00\x00\x00\x00\x00\x32\x00\x00\x00\x32\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x05\x00\x00\x00\x03\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x03\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x04\x00\x00\x00\x02\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00\x03\x00\x00\x00\x04\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\x01\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x00\x00"

/*
This demo uses gr_dc, so you must add a
update_win routine because gr_dc is not
persistent.  (It gets erased each update by
the system.)
*/








      /* <1> <1> (image) */







GrDC *dc=GrDCAlias(gr_dc,Fs);


U0 UpdateWin(TaskStruct *task)
{
  nounusedwarn task;
//We can change the pen width because it was not
//define in <CTRL-R>.
  dc->pen_width=2;
  dc->bkcolor=BLACK;
  GrDCDepthBufRst(dc);
  GrSpritePlot3(dc,0,0,0,__BIN_1);
}

U0 GrSprite2()
{
  F64 theta=0,phi=0;

  SettingsPush; //See [C:/LT/Adam/TaskSettings.APZ,3] SettingsPush
  Fs->update_win=&UpdateWin;
  Preempt(OFF); //We don't want update during matrix change
  dc->x=200;
  dc->y=200;
  dc->z=GR_Z_ALL;
  dc->flags|=DCF_TRANSFORMATION;
  GrDCAllocDepthBuf(dc);
  while (!ScanChar) {
    GrIdentEqu(dc->r);
    GrRotXEqu(dc->r,phi);
    GrRotZEqu(dc->r,theta);
    GrSetRotMat(dc,dc->r);

    Sleep(40);

    theta+=2*pi/100;
    phi+=2*pi/130;
  }
  SettingsPop;
}

GrSprite2;
