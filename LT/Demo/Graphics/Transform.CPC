#define __BIN_1_TYPE 0x00000002
#define __BIN_1_SIZE 0x00000646
#define __BIN_1 "\x16\x28\x00\x00\x00\x4F\x00\x00\x00\xEE\xFF\xFF\xFF\xC1\xFF\xFF\xFF\x0B\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\xFF\xFF\xFF\xFF\xFC\xFF\xFF\xFF\x7F\xF8\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x3F\xE0\xFF\xFF\xFF\x1F\xC0\xFF\xFF\xFF\x1F\xC0\xFF\xFF\xFF\x0F\xC0\xFF\xFF\xFF\x07\x80\xFF\xFF\xFF\x07\x00\xFF\xFF\xFF\x03\x00\xFE\xFF\xFF\x01\x00\xFC\xFF\xFF\x00\x00\xFC\xFF\x7F\x00\x00\xFC\xFF\xFF\x03\x00\xFE\xFF\xFF\x03\x00\xFE\xFF\xFF\x01\x00\xFC\xFF\x7F\x00\x00\xF0\xFF\x3F\x00\x00\xE0\xFF\x7F\x00\x00\xF0\xFF\xFF\x03\x00\xFE\xFF\xFF\x03\x00\xFE\xFF\xFF\x03\x00\xFE\xFF\xFF\x01\x00\xFC\xFF\x7F\x00\x00\xF0\xFF\x3F\x00\x00\xE0\xFF\x7F\x00\x00\xF0\xFF\xFF\x03\x00\xFE\xFF\xFF\x07\x00\xFF\xFF\xFF\x07\x00\xFF\xFF\xFF\x03\x00\xFE\xFF\xFF\x01\x00\xFC\xFF\xFF\x00\x00\xF8\xFF\x3F\x00\x00\xE0\xFF\x1F\x00\x00\xC0\xFF\x3F\x00\x00\xE0\xFF\x7F\x00\x00\xF0\xFF\xFF\x01\x00\xFC\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xE0\xFF\xFF\xFF\x7F\xE0\xFF\xFF\xFF\x3F\xE0\xFF\xFF\xFF\x1F\xC0\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x7F\xFF\xFF\xFF\xFF\x7F\xFB\xFF\xFF\xFF\x7F\xFE\xFF\xFF\xFF\x7F\xFF\xFF\xFF\xFF\x7F\xFA\xFF\xFF\xFF\x7F\xFF\xFF\xFF\xFF\x7F\xFE\xFF\xFF\xFF\x7F\xFF\xFF\xFF\xFF\x7F\xFA\xFF\xFF\xFF\x7F\xF7\xFF\xFF\xFF\x7F\xFE\xFF\xFF\xFF\xBF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x04\x00\x00\x00\x00\x06\x00\x00\x00\x00\x06\x00\x00\x00\x00\x07\x00\x00\x00\x00\x07\x00\x00\x00\x80\x07\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x0F\x00\x00\x00\x80\x1F\x00\x00\x00\x80\x1F\x00\x00\x00\xC0\x1F\x00\x00\x00\xE0\x3F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFD\xFF\xFF\xFF\xFF\xFE\xFF\xFF\xFF\xFF\xFB\xFF\xFF\xFF\xFF\xF3\xFF\xFF\xFF\xFF\xE1\xFF\xFF\xFF\xFF\xC3\xFF\xFF\xFF\xFF\xC0\xFF\xFF\xFF\xFF\xC1\xFF\xFF\xFF\x7F\x80\xFF\xFF\xFF\x3F\x00\xFF\xFF\xFF\x3F\x00\xFE\xFF\xFF\x1F\x00\xFC\xFF\xFF\x0F\x00\xFC\xFF\xFF\xDF\x03\xFC\xFF\xFF\xBF\xFF\xFE\xFF\xFF\x1F\x00\xFE\xFF\xFF\x0F\x00\xFC\xFF\xFF\x3F\x00\xF0\xFF\xFF\x1F\x00\xE0\xFF\xFF\x07\x00\xF0\xFF\xFF\x7F\x00\xFE\xFF\xFF\xBF\xFF\xFE\xFF\xFF\x1F\x00\xFE\xFF\xFF\x0F\x00\xFC\xFF\xFF\x3F\x00\xF0\xFF\xFF\x1F\x00\xE0\xFF\xFF\x07\x00\xF0\xFF\xFF\x7F\x00\xFE\xFF\xFF\xFF\x03\xFF\xFF\xFF\xFF\x3F\xFF\xFF\xFF\x07\x00\xFE\xFF\xFF\x0F\x00\xFC\xFF\xFF\x07\x00\xF8\xFF\xFF\x1F\x00\xE0\xFF\xFF\x03\x00\xC0\xFF\xFF\x8F\x00\xE0\xFF\xFF\x43\x00\xF0\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xF0\xFF\xFF\xFF\x7F\xE0\xFF\xFF\xFF\x7F\xE0\xFF\xFF\xFF\x3F\xE0\xFF\xFF\xFF\x1F\xC0\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\xFF\x00"

//This highlights the 4th dimension
//of the transformation matrix which
//is used for storing translations (shifts)
//in matricies so they can be combined
//with a matrix multiplication.

//Scroll bar works.

//The multiplication takes place in the
//[C:/LT/Adam/Gr/GrElemPlot.APZ,365] GrElemsPlotRotZ3b routine.


#define SLIDER_SPACING 20
#define SLIDER_RANGE   30
#define SLIDER_BORDER  2

class SliderState
{
  I64 s1,s2,s3;
  F64 a1,a2,scale;
} s;

U0 DrawSliderCtrl(GrBitMap *base,Ctrl *c)
{
  SliderState *s=c->state;

  base->color=LTGREEN;
  GrRect(base, c->left,c->top,SLIDER_SPACING*4+3,SLIDER_SPACING*2+SLIDER_RANGE);
  base->color=BROWN;
  GrRect(base, c->left+SLIDER_BORDER,c->top+SLIDER_BORDER,
    SLIDER_SPACING*4+3-2*SLIDER_BORDER,SLIDER_SPACING*2+SLIDER_RANGE-2*SLIDER_BORDER);
  base->color=BLACK;
  GrLine(base,c->left+SLIDER_SPACING,c->top+SLIDER_SPACING,
	      c->left+SLIDER_SPACING,c->top+SLIDER_SPACING+SLIDER_RANGE-1);
  GrLine(base,c->left+2*SLIDER_SPACING+1,c->top+SLIDER_SPACING,
	      c->left+2*SLIDER_SPACING+1,c->top+SLIDER_SPACING+SLIDER_RANGE-1);
  GrLine(base,c->left+3*SLIDER_SPACING+2,c->top+SLIDER_SPACING,
	      c->left+3*SLIDER_SPACING+2,c->top+SLIDER_SPACING+SLIDER_RANGE-1);

  base->color=LTGREEN;
  GrPrintF(base,c->left+SLIDER_SPACING-FONT_WIDTH/2,
	      c->top+SLIDER_SPACING+SLIDER_RANGE+3,
    "%d",s->s1*10/SLIDER_RANGE);
  GrPrintF(base,c->left+2*SLIDER_SPACING+1-FONT_WIDTH/2,
	      c->top+SLIDER_SPACING+SLIDER_RANGE+3,
    "%d",s->s2*10/SLIDER_RANGE);
  GrPrintF(base,c->left+3*SLIDER_SPACING+2-FONT_WIDTH/2,
	      c->top+SLIDER_SPACING+SLIDER_RANGE+3,
    "%d",s->s3*10/SLIDER_RANGE);
  GrRect(base,c->left+SLIDER_SPACING-3,	 c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s1-2 ,7,5);
  GrRect(base,c->left+2*SLIDER_SPACING+1-3,c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s2-2,7,5);
  GrRect(base,c->left+3*SLIDER_SPACING+2-3,c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s3-2,7,5);
  base->color=GREEN;
  GrRect(base,c->left+SLIDER_SPACING-2,	 c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s1-1 ,5,3);
  GrRect(base,c->left+2*SLIDER_SPACING+1-2,c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s2-1,5,3);
  GrRect(base,c->left+3*SLIDER_SPACING+2-2,c->top+SLIDER_SPACING+SLIDER_RANGE-1-s->s3-1,5,3);
}

U0 UpdateDerivedSliderCtrl(Ctrl *c)
{
  SliderState *s=c->state;
  c->left=c->win_task->win_pixel_width/2-(SLIDER_SPACING*4+3)/2;
  c->right=c->left+SLIDER_SPACING*4+3;
  c->top=c->win_task->win_pixel_height/2-(SLIDER_SPACING*2+SLIDER_RANGE)/2;
  c->bottom=c->top+SLIDER_SPACING*2+SLIDER_RANGE;
  s->s1=LimitI64(s->s1,0,SLIDER_RANGE-1);
  s->s2=LimitI64(s->s2,0,SLIDER_RANGE-1);
  s->s3=LimitI64(s->s3,1,SLIDER_RANGE-1);
  s->a1=pi/2.0*s->s1/SLIDER_RANGE;
  s->a2=1.0*(s->s2-SLIDER_RANGE/2)/SLIDER_RANGE;
  s->scale=2.0*s->s3/SLIDER_RANGE;
}

U0 LeftClickSlider(Ctrl *c,I64 x,I64 y,BoolI8 down)
{
  nounusedwarn down;
  SliderState *s=c->state;
  if (x<c->left+(c->right-c->left)/3)
    s->s1=SLIDER_RANGE-1-(y-(c->top+SLIDER_SPACING));
  else if (x<c->left+2*(c->right-c->left)/3)
    s->s2=SLIDER_RANGE-1-(y-(c->top+SLIDER_SPACING));
  else
    s->s3=SLIDER_RANGE-1-(y-(c->top+SLIDER_SPACING));
  if (c->update_derived_vals)
    (*c->update_derived_vals)(c);
}

Ctrl *SliderNew()
{
  BoolI8 old_preempt;
  Ctrl *c=CAlloc(sizeof(Ctrl));
  c->win_task=Fs;
  c->flags=CTRLF_SHOW|CTRLF_CAPTURE_LEFT_IP;
  c->type=CTRLT_GENERIC;
  c->state=&s;
  MemSet(&s,0,sizeof(s));
  c->draw_it=&DrawSliderCtrl;
  c->left_click=&LeftClickSlider;
  c->update_derived_vals=&UpdateDerivedSliderCtrl;
  old_preempt=Preempt(OFF);
  InsQue(c,Fs->last_ctrl);
  TaskDerivedValsUpdate;
  Preempt(old_preempt);
  return c;
}

U0 SliderDel(Ctrl *c)
{
  BoolI8 old_preempt=Preempt(OFF);
  RemQue(c);
  Preempt(old_preempt);
  Free(c);
}





/* Tree <1> (image) */



#define MAP_HEIGHT	2048
#define MAP_WIDTH	2048

#define NUM_TREES	256

I64 tree_x[NUM_TREES],tree_y[NUM_TREES];

class MPCtrl {
  I64 mp_cnt;
  I64 r[16];
  F64 a;
} mp;


U0 MPDrawIt(TaskStruct *task)
{
  GrBitMap *base=GrAlias(gr_refreshed_base,task);
  I64 i,lo=Gs->num*NUM_TREES/mp.mp_cnt,hi=(Gs->num+1)*NUM_TREES/mp.mp_cnt;
  MemCpy(base->r,mp.r,sizeof(I64)*16);
  base->flags|=BMF_TRANSFORMATION;
  for (i=lo;i<hi;i++)
    GrElemsPlotRotZ3b(base,tree_x[i],
		     tree_y[i],0,__BIN_1,mp.a);
  GrDel(base);
}

U0 UpdateWin(TaskStruct *task)
{
  GrBitMap *base=GrAlias(gr_refreshed_base,task);
  I64 i,h,v;
  task->horz_scroll.min=-s.scale*MAP_HEIGHT*Sin(s.a1);
  task->horz_scroll.max=s.scale*MAP_WIDTH*Cos(s.a1)-task->win_pixel_width;
  task->vert_scroll.min=0;
  task->vert_scroll.max=s.scale*(MAP_HEIGHT*Cos(s.a1)+MAP_WIDTH*Sin(s.a1))-task->win_pixel_height;
  TaskDerivedValsUpdate(task);

  h=task->horz_scroll.pos;
  v=task->vert_scroll.pos;

  GrRotZEqu(base->r,s.a1);
  GrScaleMatEqu(base->r,s.scale);
  GrSetRotMat(base,base->r);
  GrSetTranslation(base->r,-h,-v,0);
  MemCpy(mp.r,base->r,sizeof(I64)*16);
  mp.a=s.a2;

  for (i=1;i<mp.mp_cnt;i++)
    MPJob(&MPDrawIt,task,1<<MPCf_FREE_ON_COMPLETE,1<<i);
  MPDrawIt(task);

  base->flags|=BMF_TRANSFORMATION;
  base->color=BROWN;
  base->pen_width=4;
  GrLine3(base,2,2,0,MAP_WIDTH-3,2,0);
  GrLine3(base,2,MAP_HEIGHT-3,0,MAP_WIDTH-3,MAP_HEIGHT-3,0);
  GrLine3(base,2,2,0,2,MAP_HEIGHT-3,0);
  GrLine3(base,MAP_WIDTH-3,2,0,MAP_WIDTH-3,MAP_HEIGHT-3,0);

  GrDel(base);
}


U0 Init()
{
  I64 i;
  for (i=0;i<NUM_TREES;i++) {
    tree_x[i]=RandU16%MAP_WIDTH;
    tree_y[i]=RandU16%MAP_HEIGHT;
  }
}

U0 TransformDemo(I64 _mp_cnt=mp_cnt)
{
  SettingsPush; //See [C:/LT/Adam/TaskSettings.APZ,3] SettingsPush
  Init;
  Fs->update_win=&UpdateWin;
  WinBorder(ON);

  Fs->horz_scroll.pos=0;
  Fs->vert_scroll.pos=0;
  Ctrl *c=SliderNew;
  s.s1=0;
  s.s2=SLIDER_RANGE/2;
  s.s3=SLIDER_RANGE/2;

  MemSet(&mp,0,sizeof(MPCtrl));
  mp.mp_cnt=_mp_cnt;

  PressAKey;
  SliderDel(c);
  SettingsPop;
  //If you care, you might want to
  //save the original state of the
  //scroll bars.
}

TransformDemo;
