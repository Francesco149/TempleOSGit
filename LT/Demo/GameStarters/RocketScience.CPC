#define __BIN_3_TYPE 0x00000002
#define __BIN_3_SIZE 0x000001CA
#define __BIN_3 "\x16\x2E\x00\x00\x00\x12\x00\x00\x00\xE9\xFF\xFF\xFF\xF7\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x40\x55\x55\x55\x15\x00\xA0\xAA\xAA\xAA\xAA\x00\x40\x00\x00\x40\x55\x01\x80\x00\x00\x80\x8A\x00\x40\x55\x55\x55\x55\x00\xA0\xAA\xAA\xAA\x0A\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x40\x55\x55\x55\x15\x00\xA0\xAA\xAA\xAA\xAA\x00\x40\x00\x00\x40\x55\x01\x80\x00\x00\x80\x8A\x00\x40\x55\x55\x55\x55\x00\xA0\xAA\xAA\xAA\x0A\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF8\x1F\x00\x00\x00\x00\xF8\x3F\x00\x00\x00\x00\x00\x40\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x40\x55\x55\x55\x15\x00\xA0\xAA\xAA\xAA\xAA\x00\x40\x00\x00\x40\x55\x01\x80\x00\x00\x80\x8A\x00\x40\x55\x55\x55\x55\x00\xA0\xAA\xAA\xAA\x0A\x00\x00\x40\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xF8\x3F\x00\x00\x00\x00\xF8\x1F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\x3F\x00\x00\x00\x00\xFF\x7F\x00\x00\x00\x00\x07\xE0\x00\x00\x00\x00\x06\xC0\x01\x00\x00\x00\xFE\xBF\xFF\xFF\x7F\x00\xFC\x7F\xFF\xFF\xFF\x01\xBC\xAA\xAA\xAA\xEA\x07\x58\x55\x55\x55\x55\x1F\xB8\xFF\xFF\xBF\xAA\x3E\x78\xFF\xFF\x7F\x75\x3F\xB8\xAA\xAA\xAA\xAA\x0F\x5C\x55\x55\x55\xF5\x03\xFC\xBF\xFF\xFF\xFF\x00\xFE\xFF\xFF\xFF\x3F\x00\x06\xC0\x01\x00\x00\x00\x07\xE0\x00\x00\x00\x00\xFF\x7F\x00\x00\x00\x00\xFF\x3F\x00\x00\x00\x00\x00"
#define __BIN_1_TYPE 0x00000002
#define __BIN_1_SIZE 0x0000029E
#define __BIN_1 "\x16\x35\x00\x00\x00\x17\x00\x00\x00\xE0\xFF\xFF\xFF\xF2\xFF\xFF\xFF\x0A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xE0\x03\x00\x00\x00\x00\x00\xE0\x07\x00\x00\x00\x00\x00\xC0\x07\x00\x00\x00\x00\x00\xC0\x0F\x00\x00\x00\x00\x00\xC0\x1F\x00\x00\x00\x00\x00\x80\x1F\x00\x00\x00\x00\x00\x80\x3F\x00\x00\x00\x3C\x00\x00\x3F\x00\x00\xFE\x3F\x00\x00\x7F\x00\xFE\xFF\x3F\x00\x00\x83\xFE\x9F\x9F\x3F\x00\x00\xFE\xFF\xEF\xEF\xFF\x07\x00\xFE\xFF\xF3\xF3\xFF\x07\x00\xFE\xFF\xFD\xFD\xFF\x03\x00\xFC\xFF\x00\xFE\x1F\x00\x00\xFC\xFF\xFF\xFF\x00\x00\x00\x00\xF8\xFF\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\x0F\xF8\xFF\xFF\xFF\xFF\x1F\xEF\xFB\xFF\xFF\xFF\xFF\x1F\xEF\xF7\xFF\xFF\xFF\xFF\x1F\xDF\xF7\xFF\xFF\xFF\xFF\x1F\xDF\xEF\xFF\xFF\xFF\xFF\x1F\xDF\xDF\xFF\xFF\xFF\xFF\x1F\xBF\xDF\xFF\xFF\xFF\x03\x18\xBF\xBF\xFF\xFF\x01\xBC\x1B\x7F\xBF\xFF\x01\xFE\xBF\x17\x7F\x7F\x00\xFE\xFF\xBF\x17\x7F\x83\xFE\x9F\x9F\x3F\x00\xFF\xFE\xFF\xEF\xEF\xFF\x17\xFF\xFE\xFF\xF3\xF3\xFF\x17\xFF\xFE\xFF\xFD\xFD\xFF\x1B\xFF\xFD\xFF\x00\xFE\x1F\x18\xFF\xFD\xFF\xFF\xFF\xE0\x1F\xFF\x00\xF8\xFF\x03\xFF\x1F\xFF\xFF\x07\x00\xFC\xFF\x1F\xFF\xFF\xFF\xEF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xE0\x03\x00\x00\x00\x00\x00\xE0\x07\x00\x00\x00\x00\x00\xC0\x07\x00\x00\x00\x00\x00\xC0\x0F\x00\x00\x00\x00\x00\xC0\x1F\x00\x00\x00\x00\x00\x80\x1F\x00\x00\x00\x00\x00\x80\x3F\x00\x00\x00\x3C\x00\x00\x3F\x00\x00\xFE\x3F\x00\x00\x7F\x00\xFE\xFF\x3F\x00\x00\x83\xFE\x9F\x9F\x3F\x00\x00\xFE\xFF\xEF\xEF\xFF\x07\x00\xFE\xFF\xF3\xF3\xFF\x07\x00\xFE\xFF\xFD\xFD\xFF\x03\x00\xFC\xFF\x00\xFE\x1F\x00\x00\xFC\xFF\xFF\xFF\x00\x00\x00\x00\xF8\xFF\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\x0F\xF8\xFF\xFF\xFF\xFF\x1F\x0F\xF8\xFF\xFF\xFF\xFF\x1F\x0F\xF0\xFF\xFF\xFF\xFF\x1F\x1F\xF0\xFF\xFF\xFF\xFF\x1F\x1F\xE0\xFF\xFF\xFF\xFF\x1F\x1F\xC0\xFF\xFF\xFF\xFF\x1F\x3F\xC0\xFF\xFF\xFF\x03\x18\x3F\x80\xFF\xFF\x01\x80\x1B\x7F\x80\xFF\x01\x00\x80\x17\x7F\x00\x00\x00\x00\x80\x17\x7F\x00\x00\x00\x00\x00\x00\xFF\x00\x00\x00\x00\x00\x10\xFF\x00\x00\x00\x00\x00\x10\xFF\x00\x00\x00\x00\x00\x18\xFF\x01\x00\x00\x00\x00\x18\xFF\x01\x00\x00\x00\xE0\x1F\xFF\x00\x00\x00\x00\xFF\x1F\xFF\xFF\x07\x00\xFC\xFF\x1F\xFF\xFF\xFF\xEF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\xFF\xFF\xFF\xFF\xFF\xFF\x1F\x00"
#define __BIN_2_TYPE 0x00000002
#define __BIN_2_SIZE 0x00000772
#define __BIN_2 "\x16\x4B\x00\x00\x00\x2F\x00\x00\x00\xD4\xFF\xFF\xFF\xEA\xFF\xFF\xFF\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1E\x00\x80\x3F\x00\x00\x00\x00\x00\x00\x1E\x00\xC0\x3F\x00\x00\x00\x00\x00\x00\x3E\x00\xE0\x3F\x00\x00\x00\x00\x00\x00\x7E\x00\xF8\x38\x00\x00\x00\x00\x00\x00\x7E\x00\xFC\x38\x00\x00\x00\x00\x00\x00\xFE\x00\x7E\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x7F\x00\x00\x00\x00\x00\x00\x00\xFE\x83\x3F\x18\x00\x00\x00\x00\x00\x00\xFE\xC3\x1F\x1E\x00\x00\x00\x00\x00\x00\xF0\xE7\x0F\x1F\xE0\x1F\x00\x00\x00\x00\xC0\xFF\x83\xDF\xFF\x1F\x00\x00\x00\x00\x86\xFF\xC0\xFF\xFF\x0F\x00\x00\x00\x00\x1E\x7E\xC0\xFF\xFF\x07\x00\x00\x00\x00\x3E\x1C\x00\x00\xFE\x03\x00\x00\x00\x00\xFE\x00\x01\x00\xFE\x01\x00\x00\x00\x00\xFE\xC1\xF1\xFF\xF8\x00\x00\x00\x00\x00\xFE\x87\xF1\x3F\x78\x00\x00\x00\x00\x00\x06\x18\xF8\x1F\x3E\x00\x00\x00\x00\x00\x06\x38\xF8\x87\x1F\x00\x00\x00\x00\x00\xFE\x7F\xF8\xC1\x0F\x00\x00\x00\x00\x00\xFE\x3F\xF8\xF0\x07\x00\x00\x80\xFF\xFF\xFF\x20\x79\xFC\x0F\x00\x00\x80\xFF\xFF\x0F\x20\x79\xFE\x1F\x00\x00\x00\xFF\xFF\x00\x3E\x79\xFC\x3F\x00\x00\x00\xFE\x0F\xE0\x1F\x79\xF8\x7F\x00\x00\x00\xFC\x07\xFE\x98\x91\xE1\x7F\x00\x00\x00\xF8\xE7\x3F\x98\x93\xC3\xFF\x00\x00\x00\xF0\xFF\x0F\x9E\x93\x0F\xFF\x01\x00\x00\xE0\xFF\x83\x9F\x93\x1F\xFE\x03\x00\x00\xC0\xFF\xE0\xFF\x93\x7F\xF8\x07\x00\x00\x80\x3F\xF8\xFF\x93\xFF\xF0\x0F\x00\x00\x00\x1F\xFE\x87\x93\xFF\xE3\x1F\x00\x00\x00\x9E\x3F\x80\x93\xFF\xE7\x1F\x00\x00\x00\xFC\x01\x80\x93\xFF\x1F\x00\x00\x00\x00\x18\x00\x00\x93\x1F\x00\x00\x00\x00\x00\x00\x00\x00\x83\x0F\x00\x00\x00\x00\x00\x00\x00\x00\x83\x07\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x03\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1E\x00\x80\x3F\x00\x00\x00\x00\x00\x00\x1E\x00\xC0\x3F\x00\x00\x00\x00\x00\x00\x3E\x00\xE0\x3F\x00\x00\x00\x00\x00\x00\x7E\x00\xF8\x3F\x00\x00\x00\x00\x00\x00\x7E\x00\xFC\x3F\x00\x00\x00\x00\x00\x00\xFE\x00\xFE\x1F\x00\x00\x00\x00\x00\x00\xFE\x01\xFF\x1F\x00\x00\x00\x00\x00\x00\xFE\x83\xFF\x1F\x00\x00\x00\x00\x00\x00\xFE\xC3\xFF\x1F\x00\x00\x00\x00\x00\x00\xFE\xE7\xFF\x1F\xE0\x1F\x00\x00\x00\x00\xFE\xFF\xFF\xDF\xFF\x1F\x00\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\x0F\x00\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\x07\x00\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\x03\x00\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\x01\x00\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\x00\x00\x00\x00\x00\xFE\xFF\xFF\xFF\x7F\x00\x00\x00\x00\x00\xFE\xFF\xFF\xFF\x3F\x00\x00\x00\x00\x00\xFE\xFF\xFF\xFF\x1F\x00\x00\x00\x00\x00\xFE\xFF\xFF\xFF\x0F\x00\x00\x00\x00\x00\xFE\xFF\xFF\xFF\x07\x00\x00\x80\xFF\xFF\xFF\xFF\xFF\xFF\x0F\x00\x00\x80\xFF\xFF\xFF\xFF\xFF\xFF\x1F\x00\x00\x00\xFF\xFF\xFF\xFF\xFF\xFF\x3F\x00\x00\x00\xFE\xFF\xFF\xFF\xFF\xFF\x7F\x00\x00\x00\xFC\xFF\xFF\xFF\xFF\xFF\x7F\x00\x00\x00\xF8\xFF\xFF\xFF\xFF\xFF\xFF\x00\x00\x00\xF0\xFF\xFF\xFF\xFF\xFF\xFF\x01\x00\x00\xE0\xFF\xFF\xFF\xFF\xFF\xFF\x03\x00\x00\xC0\xFF\xFF\xFF\xFF\xFF\xFF\x07\x00\x00\x80\xFF\xFF\xFF\xFF\xFF\xFF\x0F\x00\x00\x00\xFF\xFF\x87\xFF\xFF\xFF\x1F\x00\x00\x00\xFE\x3F\x80\xFF\xFF\xFF\x1F\x00\x00\x00\xFC\x01\x80\xFF\xFF\x1F\x00\x00\x00\x00\x18\x00\x00\xFF\x1F\x00\x00\x00\x00\x00\x00\x00\x00\xFF\x0F\x00\x00\x00\x00\x00\x00\x00\x00\xFF\x07\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x03\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1E\x00\x80\x3F\x00\x00\x00\x00\x00\x00\x1E\x00\xC0\x3F\x00\x00\x00\x00\x00\x00\x3E\x00\xE0\x3F\x00\x00\x00\x00\x00\x00\x7E\x00\xF8\x3F\x00\x00\x00\x00\x00\x00\x7E\x00\xFC\x3F\x00\x00\x00\x00\x00\x00\xFE\x00\xFE\x03\x00\x00\x00\x00\x00\x00\xFE\x01\xFF\x01\x00\x00\x00\x00\x00\x00\xFE\x83\xFF\x19\x00\x00\x00\x00\x00\x00\xFE\xC3\xDF\x1E\x00\x00\x00\x00\x00\x00\xF0\xE7\xEF\x1F\xE0\x1F\x00\x00\x00\x00\xC0\xFF\xF3\xDF\xFF\x1F\x00\x00\x00\x00\x86\xFF\xF0\xFF\xFF\x0F\x00\x00\x00\x00\x1E\x7E\xF8\xFF\xFF\x07\x00\x00\x00\x00\x3E\x1C\xFE\xFF\xFF\x03\x00\x00\x00\x00\xFE\x00\xFF\xFF\xFF\x01\x00\x00\x00\x00\xFE\xC1\xFF\xFF\xF8\x00\x00\x00\x00\x00\xFE\x87\xFF\x3F\x78\x00\x00\x00\x00\x00\xFE\x1F\xFE\x1F\x3E\x00\x00\x00\x00\x00\xFE\x3F\xFE\x87\x1F\x00\x00\x00\x00\x00\xFE\x7F\xFE\xC1\x0F\x00\x00\x00\x00\x00\xFE\x3F\xFE\xF0\x07\x00\x00\x80\xFF\xFF\xFF\x20\x7F\xFC\x0F\x00\x00\x80\xFF\xFF\x0F\x20\x7F\xFE\x1F\x00\x00\x00\xFF\xFF\x00\x3E\x7F\xFC\x3F\x00\x00\x00\xFE\x0F\xE0\x1F\x7F\xF8\x7F\x00\x00\x00\xFC\x07\xFE\x9F\x9F\xE1\x7F\x00\x00\x00\xF8\xE7\xFF\x9F\x9F\xC3\xFF\x00\x00\x00\xF0\xFF\xFF\x9F\x9F\x0F\xFF\x01\x00\x00\xE0\xFF\xFF\x9F\x9F\x1F\xFE\x03\x00\x00\xC0\xFF\xFF\xFF\x9F\x7F\xF8\x07\x00\x00\x80\xFF\xFF\xFF\x9F\xFF\xF0\x0F\x00\x00\x00\xFF\xFF\x87\x9F\xFF\xE3\x1F\x00\x00\x00\xFE\x3F\x80\x9F\xFF\xE7\x1F\x00\x00\x00\xFC\x01\x80\x9F\xFF\x1F\x00\x00\x00\x00\x18\x00\x00\x9F\x1F\x00\x00\x00\x00\x00\x00\x00\x00\x9F\x0F\x00\x00\x00\x00\x00\x00\x00\x00\x9F\x07\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x03\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x01\x00\x00\x00\x00\x00\x00\x00\x00\xFE\x00\x00\x00\x00\x00\x00\x00\x00\x00\x7C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x3C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1C\x00\x00\x00\x00\x00\x00\x00\x00\x00\x18\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

/*

If you find this interesting, you might want to check-out
SimStructure, a simulation program I wrote you can downlload.


http://www.losethos.com/files/SimStrSetup.exe
Product Key: L00-W10-M70

I did study ctrl systems for 2 years, but lost enthusiasm
when I learned everything in real-life is nonlinear.
You're supposed to linearize around points and apply
control theory.  I just like to appy a PID ctrller
and fiddle intelligently with the feedback coefficients.

Real rockets have dynamics like fuel slosh to consider!

*/

#define THRUST	1000

BoolI8 blast_off,plane_hit;

MassStruct m1, //Bottom of rocket
	   m2, //Top of rocket
	   m3; //Plane
SpringStruct s;

#define PT_SPAN	40



   /* <1> <1> (image) */




   /* <2> <2> (image) */



  /* <3> <3> (image) */
 
GrDC *dc2;
Ode *ode;

#define STATE_NOZZLE_ANGLE		0
#define STATE_NOZZLE_ANGLE_VELOCITY	1
#define STATE_NUM			2

D3 target;
F64 dbg,antispin_coefficient;

U0 DrawIt(TaskStruct *task,GrDC *dc)
{
  I64 i,x,y,cx=task->win_pixel_width/2,cy=(task->win_height-4)*FONT_HEIGHT-PT_SPAN/2;
  F64 theta=Arg(m2.x-m1.x,m2.y-m1.y),
     nozzle_angle=ode->state[STATE_NOZZLE_ANGLE];
  if (blast_off) {
    x=m1.x-10*Cos(theta+nozzle_angle);
    y=m1.y-10*Sin(theta+nozzle_angle);
    for (i=0;i<6;i++) {
      if ((i^gr_screen_updates)&1)
	dc->color=YELLOW;
      else
	dc->color=RED;
      GrLine(dc,cx+(m1.x+i*Cos(theta-pi/2)),
		  cy-(m1.y+i*Sin(theta-pi/2)),
		  cx+x,cy-y);
      GrLine(dc,cx+(m1.x+i*Cos(theta+pi/2)),
		  cy-(m1.y+i*Sin(theta+pi/2)),
		  cx+x,cy-y);
    }

    for (i=0;i<10;i++) {
      switch (RandU16&3) {
	case 0: dc2->color=ROP_EQU+WHITE; break;
	case 1: dc2->color=ROP_EQU+LTGRAY; break;
	case 2: dc2->color=ROP_EQU+DKGRAY; break;
	case 3: dc2->color=ROP_EQU+BLACK; break;
      }
      GrPlot(dc2,cx+(x+RandU16%12-6),cy-(y+RandU16%12-6));
    }
  }

  if (plane_hit)
    GrSpritePlot3(dc,cx+m3.x,cy-m3.y,0,__BIN_2);
  else
    GrSpritePlot3(dc,cx+m3.x,cy-m3.y,0,__BIN_1);

  if (blast_off && !plane_hit) {
    dc->bkcolor=ROP_COLLISION+LTCYAN;
    dc->collision_cnt=0;
    GrSpritePlotRotZ3b(dc,cx+(m1.x+m2.x)/2,cy-(m1.y+m2.y)/2,0,__BIN_3,-theta);
    if (dc->collision_cnt>100) {
      Noise(1000,500,1500);
      plane_hit=TRUE;
    } else
      Snd(50);
  } else if (!plane_hit)
    Snd(0);

  dc->bkcolor=LTCYAN;
  GrSpritePlotRotZ3b(dc,cx+(m1.x+m2.x)/2,cy-(m1.y+m2.y)/2,0,__BIN_3,-theta);

  dc->color=RED;
  GrCircle(dc,cx+target.x,cy-target.y,5);

  dc->color=BLUE;
  GrCircle(dc,cx+m3.x,cy-m3.y,5);

  dc->color=BLACK;
  GrPrintF(dc,0,FONT_HEIGHT,"%12.6f",dbg);
}


U0 MyDerivative(Ode *ode,F64 t,F64 *state,F64 *DstateDt)
{
  nounusedwarn ode,t;
  F64 d,discriminant,v,a,theta=Arg(m2.state->x-m1.state->x,m2.state->y-m1.state->y),
     DthetaDt,
     collision_estimate_t,
     target_heading,target_angle_error,
     desired_nozzle_angle;
  D3 p,p_target,p_body;

  //Unit vect pointing to top of rocket from bottom.
  D3Sub(&m2.state->x,&m1.state->x,&p_body);
  D3Unit(&p_body);

  //DthetaDt lets us prevent too spin.
  DthetaDt=antispin_coefficient*
    (m2.state->DyDt*p_body.x-m2.state->DxDt*p_body.y-
     m1.state->DyDt*p_body.x+m1.state->DxDt*p_body.y)/PT_SPAN;

  //p_target is vect from top of rocket to plane.
  D3Sub(&m3.state->x,&m2.state->x,&p_target);


  //d=0.5at^2+vt
  d=D3Norm(&p_target);
 
  D3Copy(&p,&p_target);
  D3Unit(&p);
  v=(m2.state->DxDt*p.x+m2.state->DyDt*p.y)-
    (m3.state->DxDt*p.x+m3.state->DyDt*p.y);

  a=THRUST/(m1.mass+m2.mass);

  discriminant=v*v+4*0.5*a*d;
  if (discriminant>0)
    collision_estimate_t=(-v+Sqrt(discriminant))/a;
  else
    collision_estimate_t=0;
  dbg=collision_estimate_t;

  //Aim for projected pos of plane at time of impact.
  D3Copy(&p,&m3.state->DxDt);
  D3MulEqu(&p,collision_estimate_t);
  D3AddEqu(&p_target,&p);

  D3Copy(&target,&p_target);
  D3AddEqu(&target,&m2.state->x);

  target_heading=Arg(p_target.x,p_target.y);
  target_angle_error=Unwrap(theta-target_heading); //Force to range [-pi,pi)
  desired_nozzle_angle=Limit(50.0*DthetaDt+750*target_angle_error,-pi/8,pi/8);

  //For realism we limit the speed the nozzle angle can change.
  DstateDt[STATE_NOZZLE_ANGLE]=state[STATE_NOZZLE_ANGLE_VELOCITY];
  DstateDt[STATE_NOZZLE_ANGLE_VELOCITY]=
    Limit(10000*(desired_nozzle_angle-state[STATE_NOZZLE_ANGLE]),-1000,1000)+
    -10.0*state[STATE_NOZZLE_ANGLE_VELOCITY]; //Damping

  if (blast_off) {
    m1.DstateDt->DxDt+=THRUST*Cos(theta+state[STATE_NOZZLE_ANGLE]);
    m1.DstateDt->DyDt+=THRUST*Sin(theta+state[STATE_NOZZLE_ANGLE]);

    m1.DstateDt->DyDt-=25; //Gravity
    m2.DstateDt->DyDt-=25;
  }

  //For more realism reduce the mass of the rocket because of fuel.
  //You might also factor-in fuel slosh in the tank.

  //To do this, you would have to set-up state vars for mass and
  //do A=F/m manually instead of relyin on [C:/LT/Adam/Ode.APZ,340] OdeCallDerivative() to divide
  //by mass.
}

U0 Init()
{
  blast_off=FALSE;
  plane_hit=FALSE;

  do antispin_coefficient=PopUpRangeF64Exp(0.1,10.001,Sqrt(10),
    "%9.4f","Anti-spin Coefficient\r\n\r\n");
  while (!(0.1<=antispin_coefficient<10.001));

//We don't clear queue links.
  MemSet(&m1.start_saved_area,0,offset(MassStruct.end_saved_area)-offset(MassStruct.start_saved_area));
  m1.y=-PT_SPAN/2;
  m1.mass=1.0;

  MemSet(&m2.start_saved_area,0,offset(MassStruct.end_saved_area)-offset(MassStruct.start_saved_area));
  m2.y=PT_SPAN/2;
  m2.mass=1.0;

  MemSet(&m3.start_saved_area,0,offset(MassStruct.end_saved_area)-offset(MassStruct.start_saved_area));
  m3.y=380;
  m3.x=-300;
  m3.DxDt=50;
  m3.mass=1.0;

  MemSet(&s.start_saved_area,0,offset(SpringStruct.end_saved_area)-offset(SpringStruct.start_saved_area));
  s.end1=&m1;
  s.end2=&m2;
  s.rest_len=PT_SPAN;
  s.constant=10000;

  ode->state[STATE_NOZZLE_ANGLE]=0;
  ode->state[STATE_NOZZLE_ANGLE_VELOCITY]=0;

  GrDCClear;
}

U0 TaskEndCB()
{
  GrDCClear;
  SndTaskEndCB;
}

U0 RocketScience()
{
  SettingsPush; //See [C:/LT/Adam/TaskSettings.APZ,3] SettingsPush
  LtfCursor(OFF);
  WordStat(OFF);

//The ode nodes are traversed by win mgr.
  Preempt(OFF);

  MenuPush(
"File {"
"  Abort(,CH_SHIFT_ESC);"
"  Exit(,CH_ESC);"
"}"
"Play {"
"  Restart(,CH_CR);"
"  Launch(,CH_SPACE);"
"}"
);

  WinMax;
  dc2=GrDCAlias(gr_dc2,Fs);
  Fs->task_end_cb=&TaskEndCB;

  PutS("$CL$$BG,LTCYAN$");
  CrLf(Fs->win_height-4);
  PutS("$BG,YELLOW$\r\n");
 
  ode=OdeNew(STATE_NUM,1e-6,ODEF_HAS_MASSES);
  ode->derivative=&MyDerivative;
  ode->drag_v2=0.002;
  ode->drag_v3=0.00001;
  ode->acceleration_limit=5e3;

//  ode->t_scale=0.1; //Uncomment this to go in slow motion.

  Init;
  InsQue(&m1,ode->last_mass);
  InsQue(&m2,ode->last_mass);
  InsQue(&m3,ode->last_mass);
  InsQue(&s,ode->last_spring);

  InsQue(ode,Fs->last_ode);

  Fs->draw_it=&DrawIt;

  try {
    GetKey;
    blast_off=TRUE;
    while (TRUE) {
      switch (GetChar(NULL,FALSE)) {
	case CH_CR:
	  Init;
	  GetKey;
	  blast_off=TRUE;
	  break;
	case CH_SHIFT_ESC:
	case CH_ESC:
	  goto rs_done;
      }
    }
rs_done:
  } catch
    CatchAll;
  RemQue(ode);
  OdeDel(ode);
  PutS("$CL$$BG$\r\n");
  SettingsPop;
  GrDCClear;
  GrDCDel(dc2);
  MenuPop;
}

RocketScience;
