#define __BIN_1_TYPE 0x00000002
#define __BIN_1_SIZE 0x000000DC
#define __BIN_1 "\x02\x02\x05\x14\x00\x00\x00\x01\x00\x00\x00\x23\x00\x00\x00\xF4\xFF\xFF\xFF\x05\x23\x00\x00\x00\xF4\xFF\xFF\xFF\x2E\x00\x00\x00\x04\x00\x00\x00\x05\x2E\x00\x00\x00\x04\x00\x00\x00\x20\x00\x00\x00\x12\x00\x00\x00\x05\x20\x00\x00\x00\x12\x00\x00\x00\x13\x00\x00\x00\x02\x00\x00\x00\x02\x05\x06\x05\x00\x00\x00\xEC\xFF\xFF\xFF\x13\x00\x00\x00\x4A\x00\x00\x00\x14\x00\x00\x00\x49\x00\x00\x00\xEF\xFF\xFF\xFF\xE9\xFF\xFF\xFF\xF1\xFF\xFF\xFF\xEA\xFF\xFF\xFF\x14\x00\x00\x00\x02\x04\x18\x0F\x00\x00\x00\x0F\x00\x00\x00\x21\x00\x00\x00\x04\x00\x00\x00\xED\xFD\x25\x39\x52\xC1\xF0\xBF\x18\x0D\x00\x00\x00\x0D\x00\x00\x00\x3D\x00\x00\x00\x01\x00\x00\x00\xC5\xFD\xEF\x37\x52\xC1\xF0\xBF\x18\x12\x00\x00\x00\x12\x00\x00\x00\x00\x00\x00\x00\x03\x00\x00\x00\x6C\x55\x15\x39\x52\xC1\xF0\xBF\x18\x2F\x00\x00\x00\x11\x00\x00\x00\x18\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00"





/* <1> <1> (image) */




class MPCtrl {
  BoolI8 core0_done,core1_done;
} mp;


I64 *r1,*r2;

U0 UpdateWin(TaskStruct *task)
{
  GrDC *dc;
  I64 *old_r;

  if (mp.core0_done) return;

  dc=GrDCAlias(gr_dc,task);
  old_r=dc->r;
  dc->color=BLACK;
  GrPutS(dc,0,0,"This is not art.");
  GrPutS(dc,0,FONT_HEIGHT,"It's just a test pattern.");

  GrSetRotMat(dc,r1);
  dc->x=200;
  dc->y=200;
  dc->flags|=BMF_TRANSFORMATION;

  dc->pen_width=2;
  dc->bkcolor=BLACK;
  GrSpritePlot3(dc,0,0,0,__BIN_1);

  dc->color=BLUE;
  GrRect3(dc,50,75,0,100,50);
  GrRect3(dc,75,50,0,50,100);
  dc->color=GREEN;
  GrEllipse3(dc,100,100,0,50,25);
  GrEllipse3(dc,100,100,0,50,25,pi/2);
  dc->color=LTGREEN;
  GrEllipse3(dc,100,100,0,50,25,pi/6);
  GrEllipse3(dc,100,100,0,50,25,pi/3);

  GrSetRotMat(dc,old_r);
  GrDCDel(dc);
  mp.core0_done=TRUE;
}


U0 MPDrawIt(TaskStruct *main_task)
{
  GrDC *dc;
  I64 *old_r;

  if (mp.core1_done) return;

  dc=GrDCAlias(gr_dc2,Fs);
  old_r=dc->r;
  dc->win_task=main_task;
  GrSetRotMat(dc,r2);
  dc->x=200;
  dc->y=200;
  dc->flags|=BMF_TRANSFORMATION;

  GrDCClear(dc);

  dc->pen_width=2;
  dc->bkcolor=BLACK;
  GrSpritePlot3(dc,0,0,0,__BIN_1);

  dc->color=BLUE;
  GrRect3(dc,50,75,0,100,50);
  GrRect3(dc,75,50,0,50,100);

  dc->color=GREEN;
  GrEllipse3(dc,100,100,0,50,25);
  GrEllipse3(dc,100,100,0,50,25,pi/2);

  dc->color=LTGREEN;
  GrEllipse3(dc,100,100,0,50,25,pi/6);
  GrEllipse3(dc,100,100,0,50,25,pi/3);

  GrSetRotMat(dc,old_r);
  GrDCDel(dc);
  mp.core1_done=TRUE;
}

U0 Main()
{
  F64 theta2=0,phi2=0,theta3=0,phi3=0;
  mp.core0_done=TRUE;
  mp.core1_done=TRUE;
  r1=GrIdent;
  r2=GrIdent;

  SettingsPush; //See [C:/LT/Adam/TaskSettings.APZ,3] SettingsPush
  Fs->update_win=&UpdateWin;
  Preempt(OFF); //Don't access r1,r2 while being changed

  while (!ScanChar) {
    GrIdentEqu(r1);
    GrRotXEqu(r1,phi2);
    GrRotZEqu(r1,theta2);

    GrIdentEqu(r2);
    GrRotXEqu(r2,phi3);
    GrRotZEqu(r2,theta3);

    mp.core0_done=FALSE;
    mp.core1_done=FALSE;

    //Pass the task of the window as data item to job.
    MPJob(&MPDrawIt,Fs,1<<MPCf_FREE_ON_COMPLETE,1<<1);

    WinSync;
    while (!mp.core0_done || !mp.core1_done)
      Yield;

    theta2+=2*pi/100;
    phi2	+=2*pi/130;
    theta3-=2*pi/100;
    phi3	-=2*pi/130;
  }
  GrDCClear;

  SettingsPop;
  Free(r1);
  Free(r2);
}

Main;
