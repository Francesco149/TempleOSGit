BoolI8 load_test_done;

U0 Job1(U64 dummy=0)
{ //Compile OSMain2
  nounusedwarn dummy;
  TaskLocalInit; //Enable file access
  Preempt(ON);	 //Off by default
  Silent(ON);
  while (!load_test_done) {
    Cd("::/LT/OSMain2");
    Cmp("OSMain2");
  }
}

U0 Job2(U64 dummy=0)
{ //Log a file
  nounusedwarn dummy;
  TaskLocalInit; //Enable file access
  Preempt(ON);	 //Off by default
  while (!load_test_done) {
    AdamLog("%F","::/LT/Demo/MultiCore/LoadTest.CPZ");
    Yield;
  }
}

U0 Job3(U64 dummy=0)
{ //Log a file
  nounusedwarn dummy;
  TaskLocalInit; //Enable file access
  Preempt(ON);	 //Off by default
  while (!load_test_done) {
    Cd("::/LT/OSMain2");
    AdamLog("%F","OSMain2.SPZ");
    Yield;
  }
}

U0 DoIt()
{
  load_test_done=FALSE;
  PrintF("Running MultiCore Test...\r\n");
  MPSpawn(&Job1);
  MPSpawn(&Job2);
  MPSpawn(&Job1);
  MPSpawn(&Job3);
  Spawn(&Job1);
  Spawn(&Job2);
  Spawn(&Job1);
  Spawn(&Job3);
  PressAKey;
  load_test_done=TRUE;
  //Allow time to stop (kludge)
  //Don't pull code from under other cores.
  Sleep(500);
}

DoIt;
