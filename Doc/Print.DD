                                Print Fmt Strs

<fmt_arg> := %[-][0][<width>][.<decimals>][<flags>][h<aux_fmt_num>]<fmt_code>

See [C:/Kernel/StrPrint.HC.Z,208] StrPrintJoin().

<flags>:

  't' truncate to <width>.
',' add commas every three digits or four nibbles.
'$' makes %Q convert '$' to "\x24".
'/' makes %Q and %q convert '%' to "%%".

<aux_fmt_num>:

  For "%n", "%d" or "%u", the <aux_fmt_num> causes thousands mode.  "%h?n" 
will pick a var exponent multiples of three unit, while "%h-3n" will display 
milli units or "%h6n" will display mega units.  The 'k' flag is always on 
for "%n".  See [C:/Demo/Print.HC.Z,1].

For "%c" or "%C", the <aux_fmt_num> repeats the char that many times.

<fmt_code>:

  "%n" floating point in engineering notation, exponents being multiples of 
three.  If it has a <aux_fmt> code, it will display scientific units 
letters.

"%S" [C:/Kernel/KDefine.HC.Z,49] Define() entry.

"%C" [C:/Kernel/KernelB.HH.Z,58] ToUpper() character.

"%h25c",'\n'; 25 new-lines.

"%h*c",25,'\n'; 25 new-lines.

"%F" text file by filename.

"%$F" [C:/Doc/DolDocOverview.DD.Z,1] DolDoc file in memory.

"%p" ptr. 

"%,p" ptr with no offset. 

"%P" link to ptr.

"%,P" link to ptr with no offset.

"%D" date.  Pass a [C:/Kernel/KernelA.HH.Z,186] CDate.

"%T" time.  Pass a [C:/Kernel/KernelA.HH.Z,186] CDate.

"%z" sub_entry of an enumerated list of text entries.  See
  [C:/Kernel/StrA.HC.Z,397] LstSub().  Pass 
sub_entry_num first, list second.

"%Z" [C:/Kernel/KDefine.HC.Z,13] DefineLstLoad() subentry.  Pass
  sub_entry_num first, define_name 
second.

"%Q" convert "\" to "\\" and quote to backslash quote. (For use in creating 
strs in strs.)

"%q" rev a "%Q".


                                 Print Family

[C:/Kernel/StrPrint.HC.Z,898] MStrPrint(U8 *fmt,...) is like
[C:/Kernel/StrPrint.HC.Z,876] StrPrint(U8 *dst,U8 *fmt,...) but it returns a 
[C:/Kernel/Mem/MAllocFree.HC.Z,387] MAllocated str.  It is vary handy because
you don't have to worry about 
overflow.

[C:/Kernel/StrPrint.HC.Z,881] CatPrint(U8 *_dst,U8 *fmt,...) concatenates a
formated string.

[C:/Kernel/Job.HC.Z,482] In(U8 *fmt,...) sends text to the current task's
input buffer.
[C:/Kernel/Job.HC.Z,464] InStr(U8 *fmt,...) sends text of an
[C:/Doc/Glossary.DD.Z,1] InFile to the keyboard stream of the 
current TASK but can also do mouse cmds.

[C:/Kernel/Job.HC.Z,445] XTalk(CTask *task,U8 *fmt,...) and text to another
task's input buffer.
[C:/Kernel/Job.HC.Z,489] XTalkStr(CTask *task,U8 *fmt,...) sends text of an
[C:/Doc/Glossary.DD.Z,1] InFile to the keyboard 
stream of another TASK but can also do mouse cmds.

[C:/Adam/DolDoc/DocPutS.HC.Z,148] DocPrint(CDoc *doc,U8 *fmt,...) sends text
to a document.  You can buffer to a 
Doc and save it, providing the functionality of fprintf.  See 
[C:/Demo/Dsk/FPrintF.HC.Z,1].

[C:/Kernel/Job.HC.Z,406] Adam(U8 *fmt,...) sends text to the
[C:/Doc/Glossary.DD.Z,1] Adam Task to be compiled and run.
[C:/Kernel/Job.HC.Z,423] AdamLog(U8 *fmt,...) and [C:/Kernel/Job.HC.Z,433]
AdamErr(U8 *fmt,...) send text to the [C:/Doc/Glossary.DD.Z,1] Adam Task to
be 
displayed.

[C:/Compiler/CMisc.HC.Z,68] StreamPrint(U8 *fmt,...) sends text to the stream
of code being compiled and 
must reside in a #exe{} blk.

[C:/Adam/Gr/GrBitMap.HC.Z,935] GrPrint(CDC *dc,I64 x,I64 y,U8 *fmt,...) and
[C:/Adam/Gr/GrBitMap.HC.Z,944] GrVPrint() plots text in graphics 
mode.

[C:/Adam/Gr/GrTextBase.HC.Z,321] TextPrint(CTask *task,I64 x,I64 y,I64
attr,U8 *fmt,...) plots to [TextBase Layer,1] gr.text_base.

[C:/Compiler/CMain.HC.Z,605] ExePrint(U8 *fmt,...) compiles and execute a
string.  Note: It returns the res 
of the last executed expression.

[C:/Adam/ARegistry.HC.Z,144] Once(U8 *fmt,...) Writes User code to
[C:/Home/Registry.HC.Z,1] Registry to be executed next boot.

[C:/Adam/ARegistry.HC.Z,135] AOnce(U8 *fmt,...) Writes Adam code to
[C:/Home/Registry.HC.Z,1] Registry to be executed next boot.

[C:/Adam/InFile.HC.Z,26] InPrint(I64 mS,U8 *fmt,...)
[C:/Kernel/KeyDev.HC.Z,20] PutChars()s one at a time with a delay.

[C:/Kernel/KDbg.HC.Z,217] RawPrint(I64 mS,U8 *fmt,...) sends direct to scrn
memory, bypassing window 
manager.

[C:/Kernel/KTask.HC.Z,424] User(U8 *fmt,...) Spawns a user and execute a
string on start-up.

[C:/Kernel/Job.HC.Z,397] PopUpPrint(U8 *fmt,...) compiles and execute a
string in a pop-up win.  Note: 
It returns the res of the last executed expression.
[C:/Adam/DolDoc/DocPopUp.HC.Z,11] PopUpViewPrint(U8 *fmt,...) creates a
pop-up window and views text.

**Note:** Use Print("%s",src) if you need an unmodified string.
