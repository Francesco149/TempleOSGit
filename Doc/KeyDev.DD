The editor mostly stays in a [C:/Kernel/SerialDev/Message.HC.Z,142]
GetKey()/[C:/Kernel/KeyDev.HC.Z,1] PutKey() loop.  The putkey portion is 
where keys are acted-upon.  TempleOS has a chain of putkey hndlrs in a 
[Circular Queue,1] Circular Queue with priorities.  The highest priority
hndlrs can choose to 
terminate handling, otherwise, the keys get sent on down the chain.

[C:/Kernel/KeyDev.HC.Z,70] KeyDevAdd() defines a putkey device with a
priority.  "Device" might be a 
misnomer.  Currently, the following are defined:

Priority    Hndlr
---------- ---------
0x20000000 [C:/Home/HomeKeyPlugIns.HC.Z,11] MyPutKey() user hndlr
0x40000000 [C:/Kernel/KeyDev.HC.Z,108] KDInputFilterPutKey() for
[C:/Kernel/Job.HC.Z,482] In(), [C:/Kernel/Job.HC.Z,464] InStr(), and
[C:/Kernel/Job.HC.Z,474] InFile() handling.
0x60000000 [C:/Kernel/KeyDev.HC.Z,88] KDRawPutKey() nonwindowed direct to
video mem debug output. 
0x80000000 [C:/Adam/DolDoc/DocPutKey.HC.Z,723] KDDocPutKey() standard
document cmds

Since handling individual keys is slow, TempleOS supports PutS() as well.  If 
no puts hndlr is defined, individual keys are sent.

[C:/Kernel/KernelA.HH.Z,1365] CDoc.user_put_key and
[C:/Kernel/KernelA.HH.Z,1365] CDoc.user_put_s are call back routines which
offer some 
neat tricks.  See [C:/Apps/Psalmody/JukeBox.HC.Z,1].  There is a var
[C:/Kernel/KernelA.HH.Z,1365] CDoc.user_put_d
ata which gets passed to them.
