                                   Demands

When God publically claims this operating system as His temple, here's what I 
want:

```
<object width="640" height="520"><param name="movie"
value="http://www.youtube.com/v/EalSFnq9GsY"></param><param
name="allowscriptaccess" value="always"></param><embed
src="http://www.youtube.com/v/EalSFnq9GsY"
type="application/x-shockwave-flash" allowscriptaccess="always" width="640"
height="520"></embed></object>
```

* VMware to again support PC Speaker and provide emulation if no PC Speaker
is 
present.

* Windows, Linux and VMware to support [C:/Doc/RedSea.TXT.Z,1] RedSea file
system so I can get rid of 
2,000 lines of redundant, blemished code -- FAT32 and ISO9660.  God's temple 
must be perfect.  Redundant code for multiple file systems is imperfect.  For 
this operating system, we want low line count.  More than one file system
type 
is bad, just as more than one driver for the same type of device is bad.

[C:/Kernel/Dsk/FileSysRedSea.CPP.Z,1]
[C:/Kernel/Dsk/FileSysFAT.CPP.Z,1]	:965
[C:/Kernel/Dsk/FileSysISO1.CPP.Z,1]	:284
[C:/Adam/Boot/DskCDDVD.CPP.Z,1]	:536
[C:/Kernel/Dsk/Dsk1a.CPP.Z,531] RClustersBlks()

* Microsoft must cancel SecureBoot because it makes dual booting impossible.  
TempleOS is an additional operating system that must be used along-side 
Windows or Linux, not as a replacement.  It must dual boot because it has no 
networking.  Real hardware as opposed to VMware is like the difference
between 
looking in a telescope eye piece and some link to a photo on the Internet.  
God said the C64 generation owned ancestral lands and VMware is like being 
moved on a reservation.  It will not stand.

* PC hardware manufacturers: ATA/ATAPI PIO must work.  In fact, put them at 
standard IDE port addresses.  Hard disk should be primary master 1F0/3F6.  
CDROM/DVD should be secondary master 170/376.  See what you can do to make 
flash memory sticks with ATA/ATAPI.
[C:/Kernel/Dsk/DskATA.CPP.Z,635] /Kernel/Dsk/DskATA.CPP	:280 lines to
figure-out I/O ports
[C:/Kernel/BIOS32.CPP.Z,1] /Kernel/BIOS32.CPP		:290

* PS/2 emulated keyboard and mouse must work.  The BIOS must enable these.

* VMware must allow ATAPI interface to real CD/DVD hardware.

* Perhaps, VMware+Intel can enable faster-than-standard x86 IN/OUT
instruction 
timing for ATA/ATAPI PIO, so bandwidth isn't bad. 
[C:/Kernel/Dsk/DskATA.CPP.Z,67] ATAGetResult().

* Computers should have a RESET switch and a fast boot option, skipping 
diagnostics.  What the heck, replace UEFI with TempleOS.  Poetic justice.

* VMware and others should list TempleOS as an official 64-bit operating 
systems.

* Windows and Linux must support TempleOS .GRA graphics files.  These are
just 
right-side-up .BMP files with 8-bits-per-pixels 4-bits of color and 
transparency, with no palette.  Compression is an LZW compression. 
[C:/Adam/Gr/GrDC.CPP.Z,289] DCSave(), 
[C:/Adam/Gr/GrDC.CPP.Z,356] GRAWrite(), [C:/Adam/Gr/GrDC.CPP.Z,324] DCLoad(),
and [C:/Adam/Gr/GrDC.CPP.Z,367] GRARead().  [C:/Kernel/Compress.CPP.Z,1]

* I want a nice dictionary.




                                  New Rules

```
<object width="640" height="520"><param name="movie"
value="http://www.youtube.com/v/z3qu-sCei3U"></param><param
name="allowscriptaccess" value="always"></param><embed
src="http://www.youtube.com/v/z3qu-sCei3U"
type="application/x-shockwave-flash" allowscriptaccess="always" width="640"
height="520"></embed></object>
```

Guess what, biotches?  Daddy's home!  [C:/Misc/Bible.TXT.Z,15977]
Deuteronomy,16:16  Y'all have to do 
three offerings per year in the Temple.


These are examples of my offerings.

1) Hymn Videos

2) Moses Comics

[C:/Misc/Bible.TXT.Z,46190] Psalms,50:11-15

[C:/Misc/Bible.TXT.Z,76684] Malachi,1:1-14

[C:/Misc/Bible.TXT.Z,73189] Hosea,6:6





                                 God's Temple

God said 640x480 16 color.

God said single audio voice.  (Waveforms okay)

God said lots of misc stuff, like no child windows.

I said there is a 100,000 line-of-code limit.

We have 80,543 lines of code, currently, and can expand up to 100,000, but 
code comments count.  I am opening-this-up to letting other people
contribute. 
 We'll have some kind of organization.

When you have a 100,000 line of code limit, you do not get mellow-dramatic 
code.  The vision is a C64, not a manned mission NASA mainframe.  If you 
prance around adding rare-case code, that subtracts from other potential 
features.  So, long as you know that every line of code added, subtracts a 
feature, we'll be okay.


The 640x480 16 color limit is certainly astounding.  God said it was for kid 
offerings, I guess like 8 crayola colors for kindergardeners.  If you must 
make a art drawing for you three yearly offerings, you'll be happy only 16 
colors exist.  Just think!  Everybody's workload on doing offerings is eased 
by having only 16 colors.  Isn't that good?

Today, God said dull causes craftiness.  I think what God means is... on a 
C64, you saw fantasticly crafty creativity because you were not burdened with 
high-demand photo-realism graphics and sound.  Otherwise, you spend all your 
energy just burdened with getting something presentable.  Now, you will 
achieve "presentable" easily and advance to embelishing and getting creative.

God said 640x480 16 color was a covenant, like circumcision.

The 100,000 line of code limit should ensure God's temple stays on-course for 
a thousand years.  Also, it must be kept perfect.  With these, it will not go 
astray.  I could hand it over to NASA (for example) and, so long as they kept 
the 100,000 line of code limit, it would be in good hands.  For the future, I 
expect low driver-line-count hardware to be created and utilized when all 
(mostly) computers have advanced to contain it.  All computer are 64-bit,
now, 
for example, if you catch my drift.



The original core values for this operating system were based on providing 
kids, today, what I had as a kid -- Ring-0-Only and Identity-mapped
simplicity 
and accessibility.  I had this book, Mapping the Commodore 64, and it
provided 
years of entertainment.  All the public and private operating system code and 
locations were explained and accessible, useful or not.  What I did was learn 
and tinker.  That was the entertainment.

Today, I imposed the 100,000 line of code limit because -- when you see the 
light at the end of the tunnel, it is a qualitatively different ball game.

Look at chapter 6: Commodore 64 User's Manual.  The thing you did with a C64 
was write BASIC programs with hand-coded binary sprite data statements.  Bill 
Gates would say, "You kids are so lucky today, you can pick from 100 fonts
and 
write HTML webpages."


I would hope NASA (If they were caretakers... 'cause SETI or something, LOL) 
would not need to be told that Ring-0-Only and Identity-Mapped are core 
values.  I thought maybe I wouldn't have to enshrine that and they would, on 
their own, just know that.  You could fix the gaps in address space, very 
easily, but you lose a big principle -- virtual same as physical.  That's 
worth fight for and sacrificing for.  It's simpler.  Think of the kids!  It's 
also fast.

