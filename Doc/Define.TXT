TempleOS has a string indirection feature implemented with the same hash 
symbol table entry as #define macros, [C:/Kernel/KernelA.HPP.Z,648]
HTT_DEFINE_STR.  Support for string 
lists is also provided, but it's not very efficient, though, you can make a 
hash table with a list using [C:/Kernel/KHashB.CPP.Z,203] HashDefineLstAdd().
 See 
[C:/Adam/DolDoc/DocInit.CPP.Z,1] ::/Adam/DolDoc/DocInit.CPP.

Each task can load it's own Define strings.  Remember, when a [Hash,1] Hash
table is 
searched for a string, if it is not found, the parent task's table is 
searched.

The [C:/Doc/DolDocOverview.TXT.Z,1] DolDoc framework supports text that
changes based on entries in the task's 
symbol table.  Set a text entry with a D= arg, as in $TX,"",D="DD_MYSTRING"$.
 
See [C:/Demo/DolDoc/DefineStr.CPP,1], [C:/Adam/ADefine.CPP.Z,1] and 
[C:/Doc/MemOverview.TXT.Z,1].

See [C:/Demo/Define.CPP,1].
