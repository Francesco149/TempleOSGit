AutoFiles are used to generate user input to automate operations.  The 
TempleOS tour is done with an AutoFile.  It reminds me of a Unix pipe because 
StdOut of one gets chained into StdIn of another.

When an AutoFile runs, a child task is [C:/Kernel/Task.CPP.Z,207] Spawn()ed
which intercepts real user 
input and generates fake input.  AutoFiles are [C:/Doc/HolyC.TXT.Z,1] HolyC
programs run by the child 
whose stdout goes to the parent's input buffer.  [C:/Kernel/SrvCmd.CPP.Z,261]
Msg() can be included in an A
utoFile to send special keys or mouse cmds to the parent.  While an AutoFile 
is running, the normal input gets diverted to the AutoFile task and can be 
filtered and sent back to the parent task.  Unless you are driving functions 
which prompt for data, you can probably use an #include file in place of an Au
toFile.

See [C:/Demo/AutoFile/AFDir.AUT,1].

Note: [C:/Kernel/SrvCmd.CPP.Z,495] Auto("") can be used if all you need is to
send ASCII characters.  It 
differs from [C:/Kernel/SrvCmd.CPP.Z,477] AutoStr().  You'll probably use
[C:/Kernel/SrvCmd.CPP.Z,495] Auto() a lot and not
[C:/Kernel/SrvCmd.CPP.Z,477] AutoStr().  
With [C:/Kernel/SrvCmd.CPP.Z,495] Auto(), for example, you can place answers
to the prompts for recompiling 
the Kernel module during [C:/Adam/Boot/BootIns.CPP.Z,24]
MakeOSDrvBootInstall().
