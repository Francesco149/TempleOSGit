                             Why I Cannot Use Git

If I used git, I would set-up a cloned directory in my Linux HOME that had
the 
entire tree of TempleOS files.  I would upload and download to this directory 
with GIT.

When starting TempleOS from Linux, I would copy the entire directory tree
into 
the QEMU image and boot QEMU.

After runnning QEMU, I would copy the entire directory tree out from QEMU
into 
the Linux HOME.

As it stands, all my files are stored compressed in TempleOS, with my own 
compression scheme.  GIT could not open them, just hold them as binary files.

If I did zip and unzip all the files when copying in and out, GIT could still 
not process the binary sprite graphics that I store in my source code.  If I 
tried hard, I could put the graphics in only the TempleOS demo applications 
and documentation.  The core 100,000 lines of code mostly doesn't have sprite 
graphics images, but I like being able to use sprite graphics images for 
diagrams in my source code.

GIT can not process my extended 8-Bit ASCII characters.  As a matter of fact, 
I use ASCII#5 to store the IDE cursor location in my source files and all my 
tools ignore the ASCII#5.  I use ASCII#31 for HARD_SPACE.  It is like a 
standard space but my [C:/Adam/Opt/Utils/StrUtils.HC.Z,201] spaces-to-tabs
utility, which converts all possible 
spaces to tabs,  doesn't touch the ASCII#31.  In my source code, I use 
ASCII#31 for space characters in all source code literal strings and my 
compiler converts ASCII#31 to ASCII#32 when it compiles.

Frequently, I run global [C:/HomeWrappers.HC.Z,1] find-and-replace-text on
all my files.  It would be a 
major pain if I had to check-out all my files, run find-replace tool, and 
check-in all my files.

You cannot compile my files because only my compiler supports
[C:/Doc/HolyC.DD.Z,1] HolyC, nor can I 
compile yours because my compiler only compiles [C:/Doc/HolyC.DD.Z,1] HolyC. 
In [C:/Doc/HolyC.DD.Z,1] HolyC, type-casting 
is postfix; U0 is not void, but a size-zero item that will cause a major pain 
for standard C; there is no question-colon operator; the precedence of the
bit 
shift operators is different; parentheses are optional if no function 
arguments; and taking the address of a function in [C:/Doc/HolyC.DD.Z,1]
HolyC must have an 
ampersand.


* "Git" is a trademark owned by Linus Torvalds.
* "QEMU" is a trademark owned by Fabrice Bellard.
