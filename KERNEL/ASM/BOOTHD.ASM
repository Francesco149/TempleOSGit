#define BLOCK_SIZE  0x200
#define BLOCK_COUNT_BITS 5
#define BLOCK_COUNT (1<<BLOCK_COUNT_BITS)
#define BOOT_HIGH_LOC 0x9000
#define DMA_BUF       0x9800

	USE16
BHD_START::
	DB	0x5A DUP(0);
BHD_CODE::
	CLI
	CLD
	MOV	AX,0xB800
	MOV	FS,AX
	MOV	AX,BOOT_HIGH_LOC
	MOV	SS,AX
	MOV	ES,AX
	MOV	SP,0x01000
	MOV	AX,0xF131
	MOV	WORD FS:[0],AX
	STI
	CALL	WORD GET_IP
GET_IP:
	INC	WORD FS:[0]
	POP	BX
	SUB	BX,GET_IP
	SHR	BX,4
	MOV	AX,CS		//COPY HIGH
	ADD	AX,BX
	MOV	DS,AX
	MOV	CX,BLOCK_SIZE
	XOR	SI,SI
	XOR	DI,DI
	REP_MOVSB

	DB	0xEA;
	DW	BHD_RESTART,BOOT_HIGH_LOC;

BHD_RESTART::
	MOV	CX,512	       //gets filled in
	ADD	CX,BLOCK_COUNT-1
	SHR	CX,BLOCK_COUNT_BITS
BACK:	INC	WORD FS:[0]
	PUSH	CX
	MOV	AX,CS
	MOV	DS,AX
	MOV	SI,BHD_LBA_PACKET
	MOV	DX,0x80
	MOV	AX,0x4200
BHD_INT13::		//Anti Anti Virus
	DB	0,0;
//	INT	0x13
	MOV	AX,CS
	MOV	DS,AX
	MOV	ESI,BHD_LBA_PACKET
	MOV	EAX,BLOCK_SIZE*BLOCK_COUNT/16
	ADD	WORD 6[SI],AX
	MOV	EAX,BLOCK_COUNT
	ADD	DWORD 8[ESI],EAX
	POP	CX
	LOOP	BACK

	DB	0xEA;
BHD_JMP_START::
	DW	0,0;
BHD_LBA_PACKET::
	DW	16;	 //packet size
	DW	BLOCK_COUNT;
	DW 0,0; //buf addr
	DD 0,0;     //Block lo,block hi
BHD_END::
	END
