ROOT_START_CMD:
	DB "#include \"FIL_ROOT_CPP\"",13,10,";",0;
SYSTEM_START_CMD:
	DB "#include \"/HOPPY/KERNEL/CPP/SYSTEM.CPP\"",13,10,";",0;
FAULT_START_CMD:
	DB "#include \"/HOPPY/KERNEL/CPP/FAULT.CPP\"",13,10,";",0;
USER_START_CMD:
	DB "#include \"/HOPPY/KERNEL/CPP/USER.CPP\"",13,10,";",0;
////**************************PROCEDURE*************************
	ALIGN	4,0x90
CMD_SPAWN::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ECX
	PUSH	ESI
	PUSH	EDI
	MOV	EAX,DWORD SF_PARAM1[EBP]
	OR	EAX,EAX
	JNZ	@@10
	MOV	EAX,ST_INVALID_TASK_ADDRESS
	INT	I_PUT_SYSTEXT
	XOR	EAX,EAX
	JMP	@@100
@@10:	PUSHFD
	CLI
	MOV	ESI,DWORD SF_PARAM2[EBP]
	MOV	ECX,DWORD SF_PARAM3[EBP]
	CALL	SPAWN_TASK
	MOV	ECX,DWORD TSS_HASH_TABLE[EDI]
	MOV	EAX,DWORD FS:[TSS_HASH_TABLE]
	MOV	DWORD HT_NEXT[ECX],EAX
	POPFD
	MOV	EAX,EDI
@@100:	POP	EDI
	POP	ESI
	POP	ECX
	POP	EBP
	RET
////**************************PROCEDURE*************************
// IN:	 EDI=LEX NODE
	ALIGN	4,0x90
EXECUTE_COMMAND_LINE::
	PUSH	ESI
@@1:	CMP	DWORD LEX_TOKEN[EDI],TK_IDENT
	JNE	@@10
	MOV	ESI,DWORD LEX_HASH_ENTRY[EDI]
	OR	ESI,ESI
	JZ	@@10
	TEST	DWORD HTE_TYPE[ESI],HTT_KEYWORD
	JZ	@@10
	CMP	DWORD HTE_USER0[ESI],KW_EXIT
	JE	@@100
@@10:	PUSH	ESI
	PUSH	EDI
	PUSH	ECX
	MOV	ESI,DWORD LEX_IDENT[EDI]
	MOV	ECX,TSS_DESC_LENGTH
	MOV	EDI,DWORD FS:[TSS_ABSOLUTE_ADDRESS]
	ADD	EDI,TSS_TASK_DESCRIPTOR
	REP_MOVSB
	XOR	EAX,EAX
	STOSB
	POP	ECX
	POP	EDI
	POP	ESI

	XOR	EBP,EBP
	CALL	COMPILE_STATEMENT
	JC	@@20

	PUSH	ESI
	CALL	RUN_STATEMENT
	POP	ESI
	CALL	FREE
@@20:	CMP	DWORD LEX_TOKEN[EDI],TK_EOF
	JNE	@@1
@@100:	POP	ESI
	RET
////**************************PROCEDURE*************************
	ALIGN	4,0x90
HANDLE_SLAVE_COMMANDS::
	PUSHFD
	CLI
	MOV	EAX,DWORD FS:[TSS_ABSOLUTE_ADDRESS]
	ADD	EAX,TSS_NEXT_SLAVE_CMD
	MOV	ESI,DWORD [EAX]
	CMP	EAX,ESI
	JNE	@@1
	POPFD
	RET

@@1:	CALL	REMQUE
	POPFD
	PUSH	ESI
	MOV	ESI,DWORD TSS_CMD_STRING[ESI]
	MOV	EDX,LF_DONT_FREE_BUFFER
	CALL	NEW_LEX
	CALL	LEX
	CALL	EXECUTE_COMMAND_LINE
	POP	ESI
	MOV	DWORD TSS_CMD_RESULT[ESI],EAX
	PUSH	ESI
	CALL	DELETE_LEX
	POP	ESI
	MOV	EDI,DWORD TSS_CMD_MASTER_TSS[ESI]
	OR	EDI,EDI
	JNZ	@@10
	PUSH	ESI
	MOV	ESI,DWORD TSS_CMD_STRING[ESI]
	CALL	RFREE
	POP	ESI
	CALL	RFREE
	JMP	HANDLE_SLAVE_COMMANDS

@@10:	PUSHFD
	CLI
	PUSH	EDI
	MOV	EDI,DWORD TSS_LAST_MASTER_CMD[EDI]
	CALL	INSQUE
	POP	EDI
	POPFD
	BT	DWORD TSS_CMD_FLAGS[ESI],TSSCF_WAKE
	JNC	@@15
	BTR	WORD TSS_TASK_FLAGS[EDI],TSSF_SUSPENDED
@@15:	JMP	HANDLE_SLAVE_COMMANDS
////**************************PROCEDURE*************************
CMD_QUEUE_TASK_REQUEST::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EDI
	MOV	EAX,TSS_CMD_STRUCT_SIZE
	CALL	RMALLOC
	MOV	EAX,DWORD FS:[TSS_ABSOLUTE_ADDRESS]
	MOV	DWORD TSS_CMD_MASTER_TSS[ESI],EAX
	MOV	EAX,DWORD SF_PARAM3[EBP]
	MOV	DWORD TSS_CMD_FLAGS[ESI],EAX
	PUSH	ESI
	MOV	ESI,SF_PARAM2[EBP]
	CALL	RNEW_STRING
	POP	ESI
	MOV	DWORD TSS_CMD_STRING[ESI],EDI
	MOV	EDI,DWORD SF_PARAM1[EBP]
	PUSHFD
	CLI
	MOV	EDI,DWORD TSS_LAST_SLAVE_CMD[EDI]
	CALL	INSQUE
	BT	DWORD SF_PARAM3[EBP],TSSCF_WAKE
	JNC	@@10
	BTS	WORD FS:[TSS_TASK_FLAGS],TSSF_SUSPENDED
	CALL	SWAP_IN_NEXT
@@10:	POPFD
	MOV	EAX,ESI
	POP	EDI
	POP	ESI
	POP	EBP
	RET
////**************************PROCEDURE*************************
CMD_GET_REQUEST_RESULT::
	PUSH	EBP
	MOV	EBP,ESP
	PUSH	ESI
	PUSH	EDI
	MOV	ESI,DWORD SF_PARAM1[EBP]
	MOV	EDI,DWORD FS:[TSS_ABSOLUTE_ADDRESS]
	ADD	EDI,TSS_NEXT_MASTER_CMD
	PUSHFD
	CLI
	MOV	EAX,DWORD [EDI]
@@1:	CMP	EAX,EDI
	JNE	@@10
	XOR	EAX,EAX
	JMP	@@100
@@10:	OR	ESI,ESI
	JNZ	@@20
	MOV	ESI,EAX
	JMP	@@50
@@20:	CMP	EAX,ESI
	JE	@@50
	MOV	EAX,DWORD TSS_CMD_NEXT[EAX]
	JMP	@@1
@@50:	CALL	REMQUE
	POPFD
	PUSH	ESI
	MOV	ESI,DWORD TSS_CMD_STRING[ESI]
	CALL	RFREE
	POP	ESI
	MOV	EAX,DWORD TSS_CMD_RESULT[ESI]
	CALL	RFREE
	MOV	ESI,DWORD SF_PARAM2[EBP]
	OR	ESI,ESI
	JZ	@@101
	MOV	DWORD [ESI],EAX
	MOV	EAX,1
	JMP	@@101
	
@@100:	POPFD
@@101:	POP	EDI
	POP	ESI
	POP	EBP
	RET
////**************************PROCEDURE*************************
	ALIGN	4,0x90
INIT_USER_TASK::
	BTS	WORD FS:[TSS_TASK_FLAGS],TSSF_LOCAL_USER
	BTS	WORD FS:[TSS_TASK_FLAGS],TSSF_FOCUS
	CALL	INIT_CRT
	CALL	CURSOR_OFF
	MOV	BYTE FS:[TSS_TEXT_ATTRIBUTE],0xF1
	MOV	BYTE FS:[TSS_BORDER_ATTRIBUTE],0xF9
	BTS	WORD FS:[TSS_CRT_FLAGS],CRTF_WRAP_AROUND
	MOV	DWORD FS:[TSS_WINDOW_TOP],13
	CALL	CLEAR_CRT
	CALL	CURSOR_HOME
	MOV	EAX,DWORD [SYS_EXTERN_TABLE]
	CALL	DWORD EXT_SELECT_DEFAULT_DRIVE*4[EAX]
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_ECHO
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_LEX_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_PARSE_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_OPT_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_COMPILE_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_RUN_TRACE
	RET

	ALIGN	4,0x90
USER_COMMAND_LINE::
	CALL	INIT_USER_TASK
	MOV	ESI,USER_START_CMD
CONTINUE_USER_TASK::
	MOV	EDX,LF_DONT_FREE_BUFFER
	CALL	NEW_LEX
	CALL	LEX
	CALL	EXECUTE_COMMAND_LINE
	CALL	DELETE_LEX
	MOV	EDX,LF_PROMPT+LF_DOUBLE_SEMICOLON
	CALL	NEW_LEX
	CALL	LEX
	CALL	EXECUTE_COMMAND_LINE
	CALL	DELETE_LEX
	MOV	ESI,DWORD FS:[TSS_ABSOLUTE_ADDRESS]
	CALL	ACTIVATE_NEXT_USER
	JMP	DWORD END_TASK
////**************************PROCEDURE*************************
	ALIGN	4,0x90
INIT_SYSTEM_TASK::
	CALL	INIT_CRT
	CALL	CURSOR_OFF
	MOV	BYTE FS:[TSS_TEXT_ATTRIBUTE],0xF5
	MOV	BYTE FS:[TSS_BORDER_ATTRIBUTE],0xFD
	BTS	WORD FS:[TSS_CRT_FLAGS],CRTF_WRAP_AROUND
	INC	DWORD FS:[TSS_WINDOW_TOP]
	CALL	CLEAR_CRT
	CALL	CURSOR_HOME
//	MOV	DWORD FS:[TSS_OPTIMIZATION],0
	BTS	WORD FS:[TSS_TASK_FLAGS],TSSF_ECHO
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_MALLOC_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_LEX_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_PARSE_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_OPT_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_COMPILE_TRACE
//	  BTS	  WORD FS:[TSS_TASK_FLAGS],TSSF_RUN_TRACE
	RET

	ALIGN	4,0x90
ROOT_COMMAND_LINE::
	CALL	INIT_SYSTEM_TASK
	MOV	ESI,ROOT_START_CMD
CONTINUE_SLAVE_TASK::
	MOV	EDX,LF_DONT_FREE_BUFFER
	CALL	NEW_LEX
	CALL	LEX
	CALL	EXECUTE_COMMAND_LINE
	CALL	DELETE_LEX
@@1:	CALL	HANDLE_SLAVE_COMMANDS
	CALL	SWAP_IN_NEXT
	JMP	@@1
////**************************PROCEDURE*************************
	ALIGN	4,0x90
SYSTEM_COMMAND_LINE::
	CALL	INIT_SYSTEM_TASK
	MOV	EAX,DWORD [SYS_EXTERN_TABLE]
	CALL	DWORD EXT_SELECT_DEFAULT_DRIVE*4[EAX]
	MOV	ESI,SYSTEM_START_CMD
	JMP	CONTINUE_SLAVE_TASK
////**************************PROCEDURE*************************
	ALIGN	4,0x90
FAULT_COMMAND_LINE::
	CALL	INIT_USER_TASK
	MOV	ESI,FAULT_START_CMD
	JMP	DWORD CONTINUE_USER_TASK
	END
