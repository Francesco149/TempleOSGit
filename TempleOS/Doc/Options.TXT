                               Compiler Options

Use [C:/TempleOS/Compiler/Directives.CPP.Z,6] OptOn()
[C:/TempleOS/Compiler/Directives.CPP.Z,11] OptOff().  You might need to do
#exe {OptOn();}.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1586] OPTf_REPLACE_SYMS is to cause new
declaritions to replace old, instead of 
overshadowing them in the hash sym table.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1587] OPTf_GLBLS_ON_DATA_HEAP without this
option, global vars are placed in the 
code heap which is limited to 2 Gig.  In AOT modules, global vars take-up
room 
in the .BIN file, so you might want to use this option, instead.  You might 
wish to turn it on and off around specific vars.  A disadvantage of data heap 
global vars in AOT modules is they can't be initialized.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1583] OPTf_EXTERNS_TO_IMPORTS and
[C:/TempleOS/Kernel/Adam1a.HPP.Z,1584] OPTf_KEEP_PRIVATE are strange options,
you'll 
never need.  They're to allow the same header file for Kernel to act as extern
s when compiling itself and imports when compiled by AOT modules.  They are 
used in [C:/TempleOS/Kernel/AOT.HPP.Z,1].

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1580] OPTf_WARN_UNUSED_VAR	warning if unused
var.  It is applied to functions.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1581] OPTf_WARN_PAREN		warning if
parenthesis are not needed.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1582] OPTf_WARN_DUP_TYPES	warning if dup
local var type statements.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1585] OPTf_NO_REG_VAR forces all function
local vars to the stk not registers.  
Applied to functions.

[C:/TempleOS/Kernel/Adam1a.HPP.Z,1589] OPTf_NO_BUILTIN_CONST Disable 10-byte
float consts for pi, log2_10, log10_2, 
loge_2.  Applied to functions.
