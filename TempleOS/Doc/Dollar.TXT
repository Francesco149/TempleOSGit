                               Dollar Sign Cmds

TempleOS supports rich-text type cmds which are bracketed with '$'.  Use <CTRL
-L> to experiment with them.  Use CTRL-T to toggle between plain text and
rich 
text.

The format of '$' cmds includes a two character code, +/-flags, a comma and 
args separated by commas.  The flags often determine how many and what args 
the cmd takes.

See [C:/TempleOS/Doc/CtrlL.TXT.Z,1] and
[C:/TempleOS/Demo/Doc/DemoDoc.TXT.Z,1].

See [C:/TempleOS/Kernel/Adam1a.HPP.Z,1045] Doc Type Defines and
[C:/TempleOS/Adam/Doc/Doc.CPP.Z,1] Doc Type Codes
+] TX Text
  Normally, text is not bracketed with "$", but if you wish to specify flag
  attr to center text, you can bracket them with "$" and enter flags such as
  "+CX".  You can't edit them if they are bracketed by "$" unless you toggle to
  plain text mode with <CTRL-T>.
+] CR Hard Carriage Return
  Carriage returns are normally specified without being bracketed with "$".
+] SR Soft Carriage Return
  Word wrap uses soft carriage returns which are not saved.  You never place
  soft carriage returns by yourself.
+] TB Tab
  Tabs are normally not bracketed with "$", but are stored as ASCII#9.
+] CU Cursor pos
  The cursor pos is usually stored as a ASCII#5 character and is not
  bracketed with "$".  You do not normally enter cursor pos cmds yourself.
+] ID Indent +/- num
  This changes the indention deeper if positive or shallower if negative. It
  effects the behavior of trees.
+] DA Data
  primarily used for forms that prompt for data. Use <CTRL-L> as a resource
  editor-type thing to generate the text you'll need in your "fmtstr" cmd in a
  class.  If you add it directly with
  [C:/TempleOS/Adam/Doc/DocPlain.CPP.Z,1111] DocPutS(), you'll need to fill-in
  the data addr.  See [C:/TempleOS/Adam/Doc/DocPopUp.CPP.Z,291]
  DocFormDo(),[C:/TempleOS/Demo/Doc/Form.CPP.Z,1].

If there is a ':', the space after the first ':' in the format string marks
  the first valid cursor pos.
  
+] Text Colors
  You place an expression(usually a color define--see
  [C:/TempleOS/Kernel/Adam1a.HPP.Z,3298] color defines) to indicate which of
  the 16 colors to use. If you enter no num, color returns to the default.
FD Default Foreground Color
BD Default Background Color
FG Foreground Color
BG Background Color
F2 Alt Foreground Color (Paren & Brace coloring)
FL Foreground of Links
FM Foreground of Macros/Menu-Values 
FA Foreground of Anchors
FH Foreground of Hidden widgets
FE Foreground of Trees
FU Foreground of User Text
FB Foreground of Binary Tags
FY Foreground of Keywords
FR Foreground of Keywords2
FC Foreground of Comments
FQ Foreground of Quotes
+] FU,BU User Prompts
  special color changing cmds.  They are used when the user is prompted for
  text at the cmd line.  They rst the cursor pos if the cursor is posed before
  them on the line.  They are also used to indicate the start of a prompted str.
+] CL clear
  Clear all previous entries except ones with hold(+H) flags.  You might want
  +H on word wrap entries.  Alternatively, you can use
  [C:/TempleOS/Adam/Doc/DocRecalc.CPP.Z,1697] DocClear().
+] WW Word Wrap
  Include a 1 or 0.
+] HL Highlighting
  Include a 1 or 0.
+] UL Underline
  Include a 1 or 0.
+] IV Invert
  Include a 1 or 0.
+] BK Blink
  Include a 1 or 0.
+] SX Shift X pos
  * Include a num from -16 to 15.
* Only foreground is shifted.
* Positive right.
+] SY Shift Y pos
  * Include a num from -16 to 15.
* Only foreground is shifted.
* Positive down.
+] CM Cursor Movement
  See [C:/TempleOS/Demo/Doc/CursorMove.CPP.Z,1].
+] AN Anchor
  
+] LK Link
  By default, links have a separate tag text from link text, but with the -A
  flag you can make the link displayed as in example 3.

[C:/TempleOS/Adam/Doc/Doc.CPP.Z,44] Link Types

Examples: <CTRL-T> to see

1)[C:/TempleOS/Doc/HelpIndex.TXT.Z,1] File link to HelpIndex.TXT
2)[C:/TempleOS/Doc/HelpIndex.TXT.Z,1] File link to HelpIndex.TXT with link
  type file
3)File link without different tag str.[C:/TempleOS/Doc/HelpIndex.TXT.Z,1]
4)[C:/TempleOS/Doc/HelpIndex.TXT.Z,1] File find link searching for 'Admin'
5)[C:/TempleOS/Kernel/Adam1a.HPP.Z,5] File find link searching for 5th 'CTRL'
6)[C:/TempleOS/Kernel/Str1a.CPP.Z,2351] Manual page link
7)[C:/TempleOS/Kernel/Adam1a.HPP.Z,200] File line num link
8)[C:/TempleOS/Kernel/Define1a.CPP.Z,1] File anchor link -- <CTRL-T> to see
  anchor after you click
9)[C:/TempleOS/Misc/Bible.TXT.Z,87803] Bible Link The chapter:verse actually
  just does a text search.
10) [Doc,1] Help Index Link.
+] BT Button
  See [C:/TempleOS/Demo/Doc/MenuButton.CPP.Z,1].
+] CB Check Box
  
+] MA Macro
  Macro's are usually placed into menu/help areas and they have the '+X' flag
  set by default.  Adding '-X' prevents the usual <ESC> from being sent (which
  exits the macro screen).  Note that when you output a macro to the cmd line,
  when the user clicks on it, it will go to the bottom and execute it unless
  you cancel the <ESC> with a '-X'.

+] MU Menu Value
  See [C:/TempleOS/Adam/Doc/DocPopUp.CPP.Z,617] PopUpRangeI64().
+] HX Hex Edit
  See [C:/TempleOS/Adam/Doc/DocMain.CPP.Z,651] DocD().
+] Hidden Text Widget
  HS Start of hidden text
HE End of hidden text
Hidden text widgets allow text to be placed in collapsable brackets like this
  <-This is hidden.> which can be expanded by clicking them. If you place a
  '-C' flag to uncollapse it, it will start expanded like this <-Click to
  hide>. They can be nestled like this <-Click here:<-This is nestled.> okay?>.
+] TR Tree Widget
  A tree widget is a branch in a collapsable tree.  The domain of the branch
  extends from the first +indent until enough -indents bring it back to where
  it started.  Tree's begin collapsed unless a -C flag is present.
+] SP Sprite
  You can insert a sprite into text with <CTRL-R>.  It is critical where the
  cursor is at the time you enter <CTRL-R> because the sprite will be offset
  from that location.  This is especially important when adding images to
  programs.  Numbers for sprites are automatically chosen because copying to
  and from the clipboard requires this.  You can insert another sprite with the
  same image by hitting <CTRL-T> and manually adding a $SP$ entry with the same
  num.  You can cause the $SP$ cmd to appear with some text associated with it
  by manually adding text into the $SP$ cmd, as in $SP,"pic 2",2$.
+] IB Insert Binary
  This cmd is used to tell the compiler to fetch the binary data stored after
  the end of text.  There is basically one type of binary data in DOC's at this
  point--sprites-- created with <CTRL-R>. They have a number associated with
  them.  This number is automatically chosen, because copying to the clip-board
  and back requires renuming. To use a $IB$ cmd, toggle to plain text
  (<CTRL-T>) after inserting a sprite and check the number in the $SP$ cmd.
  Create a $IB$ cmd with the same number and the sprite will be inserted into
  the compiled stream like a string constant.  You can optionally include tag
  text to be displayed for the $IB$ cmd.

The main reason for the $IB$ cmd at this point is to pass a arg to the
  [C:/TempleOS/Adam/Gr/GrSpritePlot.CPP.Z,27] SpritePlot3() function.  See
  [C:/TempleOS/Demo/Graphics/SpritePlot.CPP.Z,1].

+] IT Insert Binary Type
  See $IB$.  This cmd inserts a number into the compiled stream describing
  the type of binary data associated with a num.  See
  [C:/TempleOS/Kernel/Adam1a.HPP.Z,1269] DOCBT_CSPRITE for the types of binary
  data in DOC's.
+] IS Insert Binary Size
  See $IB$.  This cmd inserts a number into the compiled stream describing
  the size of binary data associated with a number.
+] BP Break Point
  This is used by the debugger to mark a break point.
+] HC,HI,HV html
  The [C:/TempleOS/Adam/ToHtml.CPP.Z,318] ToHtml() or
  [C:/TempleOS/Adam/ToHtml.CPP.Z,127] Doc2Html() routines will generate a html
  version of a document.  You can cause html code to be injected with HC.  If
  you happen to have a 640x480 image, you can inject it with HI.  If you happen
  to have a 640x480 .wmv video, you can inject it with HV.  Use the +HTML flag
  to inject a html link.
+] ER Error
  When errors are detected in dollar cmds, an ER entry is generated to hold
  the garbage so it is not lost.

See [C:/TempleOS/Kernel/Adam1a.HPP.Z,1206] Doc Flag Defines and
[C:/TempleOS/Adam/Doc/Doc.CPP.Z,1] Doc Flag Codes
See [C:/TempleOS/Adam/Doc/DocPlain.CPP.Z,1] dft_flags.
+] FLAGS
  +] +H Hold
    Tells it to not delete it when cleared with CL or when the
    doc->max_entries is exceeded.  Word wrap is a good one to hold.
  +] +A Auxilliary Str
    Some cmds need other strs.  A +A means an auxiliary str is present. 
    Links have +A by default, so use a -A if you wish the tag str and the link
    str to be the same.
  +] +D Define Str
    A +D means a define str is present.  The tag will be regenerated by
    substituting the value of a system #define or
    [C:/TempleOS/Kernel/Str1a.CPP.Z,620] DefineLoad() string.  See
    [C:/TempleOS/Demo/Doc/DefineStr.CPP.Z,1].
  +] +TR Tree
    * Make a tree branch.  Usually, this is placed on a text(TX) entry.  The
    tree extends from the start until another tree entry or when indentation has
    been expanded and reduced back to the starting value.
* A +C flag on a tree will start it collapsed.
  +] +PU PopUp
    A PopUp flag on a macro (MA) will cause the cmds to run in a new task, a
    pop-up window.
  +] +C Collapsed
    A collapsed flag on a tree TR entry or a hide start HS will cause it to
    start collapsed.  A -C flag will make it start open.
  +] +X <ESC> (Exit)
    * A exit flag will cause a macro to send an <ESC> before running(to exit
    the personal menu screen and return to the cmd prompt).  Actually, the
    default has an exit flag set so you might add a -X to turn-off ESC.
* If an entry is already at the cmd prompt, the +X will cause a movement to
    the bottom of the window.
  +] +Q <SHIFT-ESC> (Abort Quit)
    A quit flag is similar to a +X except a <SHIFT-ESC> instead of an <ESC>
    to exit.
  +] +Z Zero
    A zero flag on a hex edit(HX) entry will cause the offset from zero.  A
    -X will show the actual memory addr. By default, HX has the zero flag set.
  +] +HTML
    The [C:/TempleOS/Adam/ToHtml.CPP.Z,318] ToHtml() or
    [C:/TempleOS/Adam/ToHtml.CPP.Z,127] Doc2Html() routines will generate a html
    version of a document.  You can cause html link on an item with +HTML.
  +] +BP
    The Bin Ptr Link flags lets you specify a file name and bin num to import
    a bin.  $SP+BP,"<tag>",1,"filename,1"$ will import bin num "1" from filename.
  +] +AL Alias
    An alias flag on a tree entry (+TR) will cause the text of the current
    entry the cursor is on to be copied to this entry.  This creates something
    similar to a drop-down window, but it doesn't work well yet.
  +] +RD Refresh Data
    The Refresh Data flag on a DA or a CB makes the value updated
    continuously.
  

EXAMPLES:

<CTRL-T> to see how the following were done.
_Underlined_ Inverted **Blinking** super sub
This is a big long scrolling msg.

Cursor Movements:
Cursor moved 3 rows down and to 3rd column from left.
Note mandatory comma after flags

The following may be changed to modes instead of attr with flags.

                               This is centered

                                                       This is right justified
