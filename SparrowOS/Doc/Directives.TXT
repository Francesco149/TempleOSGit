The compiler looks-ahead a token most of the time, so you might throw an
extra 
semicolon after the directive if it's not taking affect right away.

#include "" 	There is no angle bracket <> form of this directive.
#exe {}		Will execute code at compile-time and can be used to insert 
code into the stream being compiled using
[C:/SparrowOS/Compiler/CmpMain.CPP.Z,14] StreamPrintF().
#define		Define string constant
#assert		Print a warning during compilation if an expression is not 
true. 
#if		Include code if an expresion is true.
#else
#endif
#ifdef,#ifndef	Include code if a sym is defined.
#ifstatic,#ifnstatic	Include code if in static compiler mode.
defined()	Is a function that can be used in expressions.
#help_index, #help_file See [::/SparrowOS/Doc/HelpSystem.TXT.Z,1] Help System.

See [::/SparrowOS/Doc/ImportExports.TXT.Z,1] Scoping and Linkages,
[::/SparrowOS/Compiler/Lex.CPP.Z,1] preprocessor and
[::/SparrowOS/Doc/Options.TXT.Z,1] Compiler Options.


Assembler Directives

See [::/SparrowOS/Compiler/OpCodes.TXT.Z,1]
::/SparrowOS/Compiler/OpCodes.TXT.Z for opcodes.  They're not standard.  
Some invalid instructions are not flagged and some valid instructions are not 
implemented. 16-bit asm support is limited.

Here are example instruction formats:
	ADD	RAX,I64 FS:DISP[RSI+RDI*8]
	ADD	RAX,I64 [DISP]

$ Current compiler output pos (instruction ptr).  Even works in C+ 
expressions.

$ works in classes.
  class MyFun
  {
    $=-16;
    I64 local1;
    I64 local2;
    $=$+256;
    I64 crazy;
  };

LABEL::
  Defines an exported glbl label.

LABEL:
  Defines an non-exported glbl label.

@@LABEL:
  Defines a local label with scope valid between two global labels.

DU8, DU16, DU32, DU64
  Define BYTE, WORD, DWORD or QWORD. Can be used with DUP() and ASCII
strings. 
 For your convenience, the ASCII strings do not have terminating zeros.  
Define cmds must end with a semicolon.

USE16, USE32, USE64

IMPORT sym1name, sym2name;

LST, NOLST

ALIGN num, fill_byte
  Align to num boundary and fill with fill_byte.

See [::/SparrowOS/Demo/Asm/AsmAndC.CPP.Z,1]
::/SparrowOS/Demo/Asm/AsmAndC.CPP.Z and 
[::/SparrowOS/Demo/Asm/AsmAndC2.CPP.Z,1] ::/SparrowOS/Demo/Asm/AsmAndC2.CPP.Z.
