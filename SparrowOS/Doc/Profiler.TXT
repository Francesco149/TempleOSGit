The SparrowOS profiler records statistics on what code location was executing 
when a task was preempted.  You can learn where most time is wasted.  There 
are two modes, [C:/SparrowOS/Adam/Profiler.CPP.Z,46] ProfBin() which monitors
a range of buckets and [C:/SparrowOS/Adam/Profiler.CPP.Z,82] ProfAll() which 
records a hit location as well as count.  I recommend
[C:/SparrowOS/Adam/Profiler.CPP.Z,82] ProfAll().

You can pass a subroutine depth level argument which records a hit in not
only 
the routine executing, but the routines which called it, as well.

When done collecting statistics, use [C:/SparrowOS/Adam/Profiler.CPP.Z,109]
ProfRep() for a report.  You might need a 
[C:/SparrowOS/Adam/Doc/DocNew.CPP.Z,697] DocMax() to expand the command line
window buffer to fit it all.

You can set the CPU to monitor with [C:/SparrowOS/Adam/Profiler.CPP.Z,68]
ProfCPUSet().

Study the code.  The profiler is very simple and you might want to enhance it 
or modify it to debug something in particular.

