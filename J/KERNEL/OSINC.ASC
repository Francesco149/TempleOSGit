		STRUC 0
SF_EBP: 	DD	?;
SF_EIP: 	DD	?;
SF_PARAM1:	DD	?;
SF_PARAM2:	DD	?;
SF_PARAM3:	DD	?;
SF_PARAM4:	DD	?;
SF_PARAM5:	DD	?;
SF_PARAM6:	DD	?;
SF_PARAM7:	DD	?;
SF_PARAM8:	DD	?;
SF_PARAM9:	DD	?;
SF_PARAM10:	DD	?;
SF_PARAM11:	DD	?;
SF_PARAM12:	DD	?;
		ENDS

		STRUC 0
NULL_SEL:		DD	?,?;
SYS_BOOT_DS_SEL:	DD	?,?;
SYS_BOOT_CS_SEL:	DD	?,?;
SYS_CS_SEL:		DD	?,?;
ZERO_DS_SEL:		DD	?,?;
//ROOT_TSS_SEL:		DD	?,?;
FIRST_FREE_SEL:
	ENDS


	STRUC 0
TRP_NEXT:		DD	?;
TRP_LAST:		DD	?;
TRP_HANDLER_START:	DD	?;
TRP_HANDLER_SKIP:	DD	?;
TRP_ESP:		DD	?;
TRP_EBP:		DD	?;
TRP_STRUCT_SIZE:
	ENDS

	STRUC 0
MB_NEXT:	 DD	?;
MB_LAST:	 DD	?;
MB_SIZE:	 DD	?;
MB_STRUCT_SIZE:
	ENDS

	STRUC 0 	//AVAILABLE TO MALLOC MEM
UUM_NEXT:	 DD	?;
UUM_SIZE:	 DD	?;
UUM_STRUCT_SIZE:
	ENDS

#define USED_USER_MEM_SIZE	-4



#define SACTf_ROOT3_LOADED	0

	STRUC	0
SACT_NEXT::		DD	?;
SACT_LAST::		DD	?;
SACT_NAME::		DB	32 DUP(?);
SACT_FLAGS::		DD	?;
	ENDS

	STRUC	0
BPT_NEXT::		DD	?;
BPT_ADDRESS::		DD	?;
BPT_BYTE::		DB	?;
	ENDS

	     STRUC 0
TSS_BACK_LINK:		DD	?;
TSS_ESP0:		DD	?;
TSS_SS0:		DD	?;
TSS_ESP1:		DD	?;
TSS_SS1:		DD	?;
TSS_ESP2:		DD	?;
TSS_SS2:		DD	?;
TSS_CR3:		DD	?;
TSS_EIP:		DD	?;
TSS_EFLAGS:		DD	?;
TSS_EAX:		DD	?;
TSS_ECX:		DD	?;
TSS_EDX:		DD	?;
TSS_EBX:		DD	?;
TSS_ESP:		DD	?;
TSS_EBP:		DD	?;
TSS_ESI:		DD	?;
TSS_EDI:		DD	?;
TSS_ES: 		DD	?;
TSS_CS: 		DD	?;
TSS_SS: 		DD	?;
TSS_DS: 		DD	?;
TSS_FS: 		DD	?;
TSS_GS: 		DD	?;
TSS_LDTR:		DD	?;
TSS_TASK_SWITCH_TRAP:	DW	?;
TSS_IO_BITMAP_PTR:	DW	?;
TSS_IO_BITMAP:		DB	(MAXIO/8) DUP (?);

TSS_TASK_DESCRIPTOR:	DB	(TSS_DESC_LENGTH+1) DUP (?);

TSS_UPDATE_WINDOW:	DD	?;
TSS_CUR_LTF:	 	DD	?;
TSS_AUX_LTF:		DD	?;
TSS_EDIT_PLUGINS:	DD	?;
TSS_SCROLL_SPEED:	DD	?;
TSS_CRT_WIDTH:		DD	?;
TSS_CRT_HEIGHT: 	DD	?;
TSS_TEXT_ATTRIBUTE:	DB	?;
TSS_BORDER_ATTRIBUTE:	DB	?;
			DW	?;  //Unused
TSS_WINDOW_LEFT:	DD	?;
TSS_WINDOW_RIGHT:	DD	?;
TSS_WINDOW_TOP: 	DD	?;
TSS_WINDOW_BOTTOM:	DD	?;
TSS_CURSOR_HOR: 	DD	?;
TSS_CURSOR_VERT:	DD	?;

TSS_WINDOW_PIXEL_LEFT:	DD	?; //These are derived
TSS_WINDOW_PIXEL_RIGHT: DD	?;
TSS_WINDOW_PIXEL_TOP:	DD	?;
TSS_WINDOW_PIXEL_BOTTOM: DD	?;

TSS_SCROLL_X:		DD	?;
TSS_SCROLL_Y:		DD	?;

TSS_CRT_FLAGS:		DD	?;

TSS_ABSOLUTE_ADDRESS:	DD	?;	//Must not move bacause of compiler
TSS_PARENT_TSS: 	DD	?;
TSS_NEXT_TSS:		DD	?;	//ABSOLUTE ADDRESS OF NEXT TSS
TSS_LAST_TSS:		DD	?;	//ABSOLUTE ADDRESS OF LAST TSS
TSS_INPUT_FILTER_TSS:	DD	?;
TSS_NEXT_SIBLING_TSS:	DD	?;
TSS_LAST_SIBLING_TSS:	DD	?;
TSS_NEXT_CHILD_TSS:	DD	?;
TSS_LAST_CHILD_TSS:	DD	?;
TSS_WINDOW_BORDER_PIXEL_LEFT:	DD	?; //These are derived
TSS_WINDOW_BORDER_PIXEL_RIGHT: DD	?;
TSS_WINDOW_BORDER_PIXEL_TOP:	DD	?;
TSS_WINDOW_BORDER_PIXEL_BOTTOM: DD	?;
TSS_TASK_FLAGS: 	DD	?;
TSS_STACK_BOTTOM:	DD	?;
TSS_NEXT_MEM_BLK:	DD	?;
TSS_LAST_MEM_BLK:	DD	?;
TSS_HEAP_CACHE: 	DB	HEAP_CACHE_SIZE DUP (?);
TSS_MALLOC_FREE_LIST:	DD	?;
TSS_NEXT_TRAP:		DD	?;
TSS_LAST_TRAP:		DD	?;
TSS_TRAP_EBP:		DD	?;
TSS_TRAP_ARGC:		DD	?;
TSS_TRAP_ARGV:		DD	?;
TSS_TAKE_TRAP:		DD	?;
TSS_BPT_LIST:		DD	?;
TSS_HASH_TABLE: 	DD	?;
TSS_ACCOUNT:		DD	?;
TSS_OPTIMIZATION:	DD	?;
TSS_NEXT_SERVANT_CMD:	DD	?;
TSS_LAST_SERVANT_CMD:	DD	?;
TSS_NEXT_MASTER_CMD:	DD	?;
TSS_LAST_MASTER_CMD:	DD	?;
TSS_NEXT_LEX:		DD	?;
TSS_LAST_LEX:		DD	?;

TSS_CUR_PARTITION:	DD	?;
TSS_CUR_DIR:	 	DD	?;
TSS_CUR_DIR_CLUSTER: 	DD	?;

TSS_END_TASK_CB:	DD	?;
TSS_USER_NUM:		DD	?;
TSS_ANSWERS:		DD	8 DUP(?);
TSS_ANSWERS_DISPLAYED:	DD	?;
TSS_USER_AUX0:		DD	?;
TSS_USER_AUX1:		DD	?;
TSS_USER_AUX2:		DD	?;
TSS_USER_AUX3:		DD	?;
TSS_STRUCT_SIZE:
	ENDS

	STRUC 0
LFN_BUFFER:		DD	?;
LFN_BUF_PTR:		DD	?;
LFN_LINE_NUM:		DD	?;
LFN_FLAGS:		DD	?;
LFN_NAME:		DD	?;
LFN_LINE_START:		DD	?;
LFN_STRUCT_SIZE:
	ENDS

	STRUC 0
LEX_NEXT:		DD	?;
LEX_LAST:		DD	?;
LEX_TOKEN:		DD	?;
LEX_FLAGS:		DD	?;
LEX_CUR_I:		DD	?;
LEX_CUR_D:		DD	?,?,?;
LEX_IDENT:		DD	?;
LEX_IDENT_LEN:		DD	?;
LEX_LAST_CHAR:		DD	?;
LEX_BRACES_CNT:		DD	?;
LEX_STATEMENT_CNT:	DD	?;
LEX_INSTRUCTION_POINTER: DD	?; //For asm
LEX_DEFINE_HASH_TABLE:	DD	?;
LEX_LOCAL_HASH_TABLE:	DD	?;
LEX_GLBL_HASH_TABLE:	DD	?;
LEX_HASH_MASK:		DD	?;
LEX_HASH_TABLE_LIST:	DD	?;
LEX_HASH_ENTRY: 	DD	?;
LEX_ABSOLUTE_ADDRESS_CNT:	DD	?;
LEX_UNDEF_HASH_ENTRY:	DD	?;
LEX_LOCAL_VAR_LIST:	DD	?;
LEX_LOCAL_VAR_ENTRY:	DD	?;
LEX_CUR_BUF_PTR:	DD	?;
LEX_CUR_LFN:		DD	?;
LEX_STACK_PTR:		DD	?;
LEX_NEXT_EXE_BLK:	DD	?;
LEX_LAST_EXE_BLK:	DD	?;
LEX_ERROR_CNT:	DD	?;
LEX_WARNING_CNT:	DD	?;

LEX_CB_PUSH_START:
LEX_CB_OUT_FIRST:	DD	?;
LEX_CB_OUT_LAST:	DD	?;
LEX_CB_OUT_END: 	DD	?;
LEX_CB_OUT_PTR: 	DD	?;
LEX_CB_LAST_OUT_PTR:	DD	?;
LEX_CB_IN_FIRST:	DD	?;
LEX_CB_IN_END:		DD	?;
LEX_CB_IN_PTR:		DD	?;
LEX_CB_LABEL_LIST:	DD	?;
LEX_CB_STACK:		DD	?;
LEX_CB_PUSH_END:

LEX_LFNS:		DB	LFN_CNT*LFN_STRUCT_SIZE DUP(?);
LEX_STACK:		DB	LFN_STACK_CNT*LFN_STRUCT_SIZE DUP(?);
LEX_STRUCT_SIZE:
		ENDS

	STRUC 0
HT_NEXT:		DD	?;
HT_MASK:		DD	?;
HT_BODY:
	ENDS

	STRUC 0
HTE_NEXT:		DD	?;
HTE_STRING:		DD	?;
HTE_TYPE:		DD	?;
HTE_USE_CNT:		DD	?;
HTE_SOURCE_LINK:	DD	?;
HTE_DEBUG:		DD	?;
HTE_USER0:		DD	?;
HTE_USER1:		DD	?;	 //Must be in same position as C_SIZE
HTE_USER2:		DD	?;	 //Must be in same position as C_DEREFERRENCE
HTE_STRUCT_SIZE:
	ENDS

	STRUC 0
SP_EDI: DD	?;
SP_ESI: DD	?;
SP_EBP: DD	?;
SP_ESP: DD	?;
SP_EBX: DD	?;
SP_EDX: DD	?;
SP_ECX: DD	?;
SP_EAX: DD	?;
SP_STRUCT_SIZE:
SP_EIP: 	DD	?;
SP_PARAM1:	DD	?;
SP_PARAM2:	DD	?;
SP_PARAM3:	DD	?;
SP_PARAM4:	DD	?;
SP_PARAM5:	DD	?;
SP_PARAM6:	DD	?;
SP_PARAM7:	DD	?;
SP_PARAM8:	DD	?;
SP_PARAM9:	DD	?;
SP_PARAM10:	DD	?;
SP_PARAM11:	DD	?;
SP_PARAM12:	DD	?;
	ENDS

#define Cf_INTERNAL 0

	STRUC 0
C_HASH_NEXT:	DD	?;
C_HASH_STRING:	DD	?;
C_HASH_TYPE:	DD	?;
C_USE_CNT:	DD	?;
C_SOURCE_LINK:	DD	?;
C_DEBUG:	DD	?;
C_MEM_CNT:	DW	?;
C_PARAM_CNT:	DW	?;	//FOR FUNCTIONS
C_SIZE: 	DD	?;	//Must be in same position as HTE_USER1
C_DEREFERRENCE:	DW	?;	//Must be in same position as HTE_USER2
C_ASSIGN:	DW	?;	//Must be in same position as HTE_USER2
C_MEM_LIST:	DD	?;	//MEMBER LIST
C_MEM_LIST_LAST: DD	?;
C_STATEMENTS:	DD	?;	//For functions
C_RETURN_CLASS: DD	?;	//For functions
C_PTR_CNT:	DB	?;
C_FLAGS:	DB	?,?,?;
C_IMPORT_NAME:	DD	?;
C_STRUCT_SIZE:
	ENDS

	STRUC 0
IC_CODE:	DD	?;
IC_DATA:	DD	?;
IC_CLASS:	DD	?;
IC_LINE:	DD	?;
IC_STRUCT_SIZE:
	ENDS


	STRUC 0
CB_NEXT:	DD	?;
CB_DATA:	DB	IC_STRUCT_SIZE*CB_IC_CNT DUP(?);
CB_STRUCT_SIZE:
	ENDS

