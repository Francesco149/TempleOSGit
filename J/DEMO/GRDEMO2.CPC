#define __BIN_2_TYPE 0x00000002
#define __BIN_2_SIZE 0x000000B4
#define __BIN_2 "\x02\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x16\x00\x00\x00\x05\x00\x00\x00\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x05\x00\x00\x00\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x31\x00\x00\x00\x09\x00\x00\x00\x05\x00\x00\x00\x31\x00\x00\x00\x09\x00\x00\x00\x22\x00\x00\x00\x17\x00\x00\x00\x05\x00\x00\x00\x22\x00\x00\x00\x16\x00\x00\x00\x14\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x2A\x00\x00\x00\x00\x00\x00\x00\x2A\x00\x00\x00\x0F\x00\x00\x00\x05\x00\x00\x00\x2A\x00\x00\x00\x0F\x00\x00\x00\x1B\x00\x00\x00\x0E\x00\x00\x00\x05\x00\x00\x00\x1B\x00\x00\x00\x0E\x00\x00\x00\x1B\x00\x00\x00\xFE\xFF\xFF\xFF\x05\x00\x00\x00\x1B\x00\x00\x00\xFE\xFF\xFF\xFF\x2A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"
#define __BIN_3_TYPE 0x00000002
#define __BIN_3_SIZE 0x000000B4
#define __BIN_3 "\x02\x00\x00\x00\x02\x00\x00\x00\x05\x00\x00\x00\x16\x00\x00\x00\x05\x00\x00\x00\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x05\x00\x00\x00\x23\x00\x00\x00\xF8\xFF\xFF\xFF\x31\x00\x00\x00\x09\x00\x00\x00\x05\x00\x00\x00\x31\x00\x00\x00\x09\x00\x00\x00\x22\x00\x00\x00\x17\x00\x00\x00\x05\x00\x00\x00\x22\x00\x00\x00\x16\x00\x00\x00\x14\x00\x00\x00\x06\x00\x00\x00\x02\x00\x00\x00\x04\x00\x00\x00\x05\x00\x00\x00\x2A\x00\x00\x00\x00\x00\x00\x00\x2A\x00\x00\x00\x0F\x00\x00\x00\x05\x00\x00\x00\x2A\x00\x00\x00\x0F\x00\x00\x00\x1B\x00\x00\x00\x0E\x00\x00\x00\x05\x00\x00\x00\x1B\x00\x00\x00\x0E\x00\x00\x00\x1B\x00\x00\x00\xFE\xFF\xFF\xFF\x05\x00\x00\x00\x1B\x00\x00\x00\xFE\xFF\xFF\xFF\x2A\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

//This demo uses grbase2, so you must add a
//update_window routine because grbase2 is not
//persistent.  (It gets erased each update by
//the system.)


/* <PI 1> <2> (image) */


GrBitMap *base=GrNew(grbase2);


void DrawIt()
{
  BYTE *img=__BIN_3;

//Without this, the text of other windows below
//would appear.
  ClearWindowText;

//We can change the pen width because it was not
//define in CTRL-R.
  base->pen_width=2;

  PlotGrElems(base,0,0,0,img,GR_BLACK);
}

void GrDemo2()
{
  int theta=0,phi=0;
  int *r1,*r2;
  DWORD sc,ch,old_update_window=Fs->update_window;
  Fs->update_window=&DrawIt;
 
  base->x=200;
  base->y=200;
  base->flags=base->flags|BMF_TRANSFORMATION;
  while (TRUE) {
    if (ScanChar(&sc,&ch)) break;
    r1=GrThetaInt(theta);
    r2=GrPhiInt(phi);
    Free(base->r);

//This combines the two rotations.
    base->r=GrMulMat(r1,r2);

    Free(r1);
    Free(r2);

    Sleep(20);

//MAX_INT is pi radians (180 degrees).
    theta+=MAX_INT/100;
    phi  +=MAX_INT/130;

  }
  Fs->update_window=old_update_window;
}

GrDemo2;